{"version":3,"sources":["components/menu/Menu.jsx","components/app/Utils.js","components/dump/Dump.jsx","components/symbols/Symbols.jsx","components/reports/Search.js","components/reports/details/linux/Plugins.js","components/reports/details/linux/LinuxPlugin.jsx","components/reports/Usage.js","components/reports/details/linux/LinuxDetails.jsx","components/reports/details/windows/Plugins.js","components/reports/details/windows/WindowsPlugin.jsx","components/reports/details/windows/WindowsDetails.jsx","components/reports/Reports.jsx","components/app/App.js","reportWebVitals.js","index.js"],"names":["withRouter","props","id","src","alt","className","href","location","pathname","buildInfoPopUp","items","push","style","display","type","onClick","$","hide","showInfoPopUp","message","color","fade","popUp","find","text","css","show","delay","fadeOut","changePage","evt","target","attributes","name","nodeValue","newPage","parseInt","innerText","stateCopy","JSON","parse","stringify","this","state","pages","pageNumber","setState","showAll","showLess","visibleDataBlocks","value","elementsVisible","displayOrder","order","column","parentElement","previousSibling","dumpData","forEach","arrayItem","sort","a","b","toLowerCase","error","TypeError","to64BitHex","decimalNumber","hex","toString","toUpperCase","i","length","toHex","bytesToSize","bytes","Math","floor","log","round","pow","pageHeader","info","returnFromAnalysis","buildHeaderBlocksMenu","searchBar","buildPluginCheckBox","buildPluginCategoryMenu","pluginInfo","DOMParserInfoBox","defaultValue","onChange","allVisibleDataBlocks","pageDetails","disabled","checkIfSelected","selectedPlugins","plugin","page","elem","fadeIn","buildJSONDownloadIcon","pluginName","data","encodeURI","download","pluginBoxHeader","infoBox","header","split","map","str","dangerouslySetInnerHTML","__html","pluginContainerFooter","currentPage","pagesSum","pluginDataColumns","columns","index","pluginDataBlocksFill","ev","dumpLength","emptyBlocks","Object","keys","item","arr","buildBasicPluginBox","ceil","slice","key","DumpUpload","onDescriptionChange","event","description","onOsChange","os","onFileChange","dump","files","chunkSize","bind","uploadDump","uploadChunk","progressBar","currentChunk","lastChunk","width","toFixed","setTimeout","preventDefault","start","end","file","total","size","system","requestsCounter","url","blob","file_id","Date","getTime","FormData","set","proceed","ajax","contentType","processData","cache","enctype","headers","tryCount","retryLimit","async","complete","textStatus","jqXHR","responseJSON","response","console","String","err","method","encType","onSubmit","placeholder","React","Component","SymbolUpload","onSubDirChange","windowsSubDir","symbolTable","uploadSymbolTable","setSearch","searchData","filteredSearchData","processFilters","search","reportSearch","reportData","filter","filteredData","startsWith","replace","checkReports","filters","match","Boolean","node","filterList","includes","removedFilters","el","filteredSearch","ignore","getReports","_id","removeFilters","pluginDataBlock","filterSearch","pluginData","filtersCopy","filtersLength","hasOwnProperty","Array","isArray","nestedFilters","flt","indexOf","negate","columnMatch","entries","element","charAt","substring","columnObj","test","columnName","columnRangeValue","columnValue","nested","block","filterLength","or","negateAllFilterFail","constructor","regex","RegExp","regexResult","nestedBlock","nestedSearch","plugins","LinuxPlugin","pagesCopy","buildPlugin","pluginBox","nextProps","prevState","pageHeaderUsage","pluginNames","label","selectStyles","container","base","control","whiteSpace","overflow","menuIsOpen","indicatorsContainer","menu","LinuxDetails","handleChange","pluginCategory","buildPage","basicLinuxDetails","pickSelectedPlugins","autoFocus","isMulti","options","closeMenuOnSelect","hideSelectedOptions","allowSelectAll","styles","categoryPlugins","selected","os_styles","os_length","os_info","dumpsize","pslist","lsmod","dumpDataCopy","WindowsPlugin","WindowsDetails","basicWindowsDetails","osData","psscan","modscan","Variable","Value","Reports","basicLinuxData","basicWindowsData","analyzeMode","analysedDump","analysedDumpOS","tagColor","buildLinuxReports","buildWindowsReports","buildResultsColumns","buildPluginSelectBox","selectAllPlugins","runPlugins","getPluginRunStatus","buildEditBox","updateDumpData","chooseTagColor","addTag","buildTags","removeTag","tagToSearch","buildDeleteBox","deleteDumpData","displayCheckBox","StartAnalyzeMode","_isMounted","results","ReactDOM","render","document","getElementById","linuxData","windowsData","undefined","mode","searchName","nameResults","db_id","tags","val","cls","tagColorState","newTag","tag","tagValue","innerHTML","json","dataType","elementName","attr","reports","linuxPlugins","windowsPlugins","pluginStatusImg","pluginsToUse","pluginCheckBoxes","htmlFor","each","checked","pluginList","get","e","prop","osName","currenttime","ProductType","showPopUp","App","exact","path","to","component","Dump","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.4a3c3dad.chunk.js","sourcesContent":["import React from \"react\";\nimport {Fragment} from \"react\";\nimport './Menu.css';\nimport { Link, withRouter } from \"react-router-dom\";                     \n\nfunction Menu(props) { // Top and side menu\n    return (\n\n            <div id=\"main\">\n                <div id=\"topmenu\"> </div>\n                <div id=\"sidemenu\">\n                    <div id=\"sidemenu-top\">\n                        <img id=\"image\" src=\"images/autovola.jpg\" alt=\"AUTOVOLA\"/>\n                    </div>\n                    <div id=\"menu-block\" className=\"up-block\">\n                        <img className=\"inner\" id=\"menu-button-image\" src=\"images/reports.png\" />\n                        <a href=\"/reports\" className=\"inner\" id={`menu-item  ${props.location.pathname === \"/reports\" ? \"active\" : \"\"}`}>Reports</a>\n                    </div>\n                    <div id=\"menu-block\">\n                        <img className=\"inner\" id=\"menu-button-image\" src=\"images/upload-isf.png\" />\n                        <a href=\"/symbols\" className=\"inner\" id={`menu-item  ${props.location.pathname === \"/symbols\" ? \"active\" : \"\"}`}>Upload ISF</a>\n                    </div>\n                    <div id=\"menu-block\">\n                        <img className=\"inner\" id=\"menu-button-image\" src=\"images/upload-dump.png\" />\n                        <a href=\"/dump\" className=\"inner\" id={`menu-item  ${props.location.pathname === \"/dump\" ? \"active\" : \"\"}`}>Upload dump</a>\n                    </div>\n                </div>\n            </div>\n        \n    );\n    //Fragment>\n    //</Fragment>\n}\n\nexport default withRouter(Menu); ","import $ from \"jquery\";\n\n// Build pop-up box\nexport const  buildInfoPopUp = function buildInfoPopUp () {\n    const items = [];\n    items.push(\n        <div id=\"info-pop-up\" style={{display: \"none\"}}>\n            <p></p>\n            <input id=\"close-pop-up-button\" type=\"image\" src=\"images/pop-up-close.png\" alt=\"close\" onClick={() => $(\"#info-pop-up\").hide()}/>\n        </div>\n    )\n    return items;\n}\n\n// Show pop-up box \nexport const showInfoPopUp = function showInfoPopUp (message, color, fade = true) {\n    var popUp = $( \"#info-pop-up\" );\n    popUp.find( \"p\" ).text(message)\n    popUp.css(\"background-color\", color)\n    popUp.show();\n    if (fade === true) { // Box disappers in 3 seconds\n        popUp.delay(3000).fadeOut();\n    }\n}\n\n// Change current plugin page to the one user selected\nexport const changePage = function changePage (evt) {\n    const node = evt.target.attributes.name.nodeValue;\n    var newPage = parseInt(evt.target.innerText)\n    let stateCopy = JSON.parse(JSON.stringify(this.state.pages))\n    stateCopy.pageNumber = newPage\n    this.setState({pages: stateCopy})\n}\n\n// Show all data rows in plugin\nexport const showAll = function showAll (evt) {\n    // http://jsfiddle.net/cse_tushar/6FzSb/\n    const node = evt.target.attributes.name.nodeValue;\n    let stateCopy = JSON.parse(JSON.stringify(this.state.pages))\n    stateCopy.showAll = true;\n    this.setState({pages: stateCopy})\n}\n\n// Stop showing all data rows in plugin\nexport const showLess = function showLess (evt) {\n    const node = evt.target.attributes.name.nodeValue;\n    let stateCopy = JSON.parse(JSON.stringify(this.state.pages))\n    stateCopy.showAll = false;\n    this.setState({pages: stateCopy})\n}\n\n// Updates how many data rows can be seen in plugin\nexport const visibleDataBlocks = function visibleDataBlocks (evt) {\n    const node = evt.target.attributes.name.nodeValue;\n    const value = parseInt(evt.target.innerText)\n    let stateCopy = JSON.parse(JSON.stringify(this.state.pages))\n    stateCopy.elementsVisible = value;\n    stateCopy.pageNumber = 1; // Change current page to 1\n    this.setState({pages: stateCopy})\n}\n\n// Change order of plugin data rows to descending or ascending\nexport const displayOrder = function displayOrder (evt) {\n    const order = evt.target.attributes.alt.nodeValue; // \"desc\" or \"asc\" depending on arrow pressed \n    const column = evt.target.parentElement.previousSibling.innerText; // column name\n    let stateCopy = JSON.parse(JSON.stringify(this.state.dumpData)) // Copy of the plugin data\n\n    // Fill null nodes with empty strings\n    stateCopy.forEach(function (arrayItem) {\n        if (arrayItem[column] == null) {\n            arrayItem[column] = \"\";\n        }\n    });\n    // Nodes are sorted either descending or ascending \n    try {\n        if(order === \"desc\") {\n            stateCopy.sort((a,b) => (a[column].toLowerCase() > b[column].toLowerCase()) ? 1 : ((b[column].toLowerCase() > a[column].toLowerCase()) ? -1 : 0));\n        }\n        else if(order === \"asc\") {\n            stateCopy.sort((a,b) => (a[column].toLowerCase() < b[column].toLowerCase()) ? 1 : ((b[column].toLowerCase() < a[column].toLowerCase()) ? -1 : 0));\n        }\n    // If typeError occurs, numerical ordering is done instead\n    } catch (error) {\n        if (error instanceof TypeError) {\n            if(order === \"desc\") {\n                stateCopy.sort((a,b) => a[column] - b [column])\n            }\n            else if(order === \"asc\") {\n                stateCopy.sort((a,b) => b[column] - a [column])\n            }\n        }\n    }\n    this.setState({dumpData: stateCopy}) // Update order\n}\n\n// Turns decimal to 8 bytes hexadecimal string\nexport const to64BitHex = function to64BitHex (decimalNumber) {\n    var hex = decimalNumber.toString(16).toUpperCase()\n    for (let i = hex.length; i < 16; i+=2) {\n        hex = \"00\" + hex;\n    };\n    hex = \"0x\" + hex;\n    return hex;\n}\n\n// Turns decimal number to hexadecimal string\nexport const toHex = function toHex (decimalNumber) {\n    var hex = decimalNumber.toString(16).toUpperCase()\n    hex = \"0x\" + hex;\n    return hex;\n}\n\n// Turns decimal to size\nexport const bytesToSize = function bytesToSize (bytes) {\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) return '0 Byte';\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n}\n\n// Build header top of the page\nexport const pageHeader = function pageHeader (info) {\n    const items = [];\n\n    var name = \"page-header\"\n\n    items.push(\n        <div id=\"plugin-page-header\">\n            <img src=\"images/return.png\" id=\"return-button\" onClick={this.props.returnFromAnalysis}/>\n            {this.buildHeaderBlocksMenu()} {/* Add these additional blocks inside the header*/}\n            {this.searchBar()}\n            {this.buildPluginCheckBox()}\n            {this.buildPluginCategoryMenu()}\n            <div id=\"header-info-container\">\n                <img src=\"images/plugin-info-white.png\" name={name} id=\"info-button\" onClick={() => this.pluginInfo(name)} />\n                {this.DOMParserInfoBox(name, info)}\n            </div>\n        </div>\n    )\n    return items;\n}\n\n// Builds select-menu used to change visible data rows of all plugins\nexport const buildHeaderBlocksMenu = function buildHeaderBlocksMenu () {\n    const items = [];\n    items.push(\n        <select id=\"all-data-blocks-amount\" defaultValue=\"20\" onChange={(evt) => this.allVisibleDataBlocks(this.state.pageDetails, evt.target.value)}>\n            <option disabled value>Data blocks</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n            <option value=\"50\">50</option>\n            <option value=\"200\">200</option>\n        </select>\n    )\n    return items;\n}\n\n// Check if plugin is selected in categories\nexport const checkIfSelected = function checkIfSelected (selectedPlugins, plugin) {\n    for (var i in selectedPlugins) {\n        if (selectedPlugins[i].value === plugin) {\n            return true;\n        }\n    }\n    return false;\n}\n\n// Changes visible data rows of all plugins\nexport const allVisibleDataBlocks = function allVisibleDataBlocks (pageDetails, value) {\n    let stateCopy = JSON.parse(JSON.stringify(pageDetails))\n    var pages = JSON.parse(JSON.stringify(stateCopy.pages))\n    for (var page in pages) { // Loop through each plugins pages\n        pages[page][\"elementsVisible\"] = parseInt(value);\n    }\n    stateCopy.pages = JSON.parse(JSON.stringify(pages))\n    this.setState({pageDetails: stateCopy})\n}\n\n// Show or hide info-box\nexport const pluginInfo = function pluginInfo (name) {\n\n    var elem = $('#info-box[name=\"' + name + '\"]')\n\n    if (elem.css(\"display\") === \"block\") {\n        elem.fadeOut();\n    } else if (elem.css(\"display\") === \"none\") {\n        elem.fadeIn();\n    }\n}\n\n// Build plugin JSON download icon\nexport const buildJSONDownloadIcon = function buildJSONDownloadIcon (pluginName) {\n    var items = [];\n    if (pluginName === \"info\") {\n        var data = 'data:attachment/text,' + encodeURI(JSON.stringify(this.state.dumpData.info))\n    }\n    else {\n        var data = 'data:attachment/text,' + encodeURI(JSON.stringify(this.state.dumpData))\n    }\n\n    items.push (\n        <a target=\"_blank\" download={pluginName + \".json\"} href={data} key={\"jsondownload\" + pluginName}>\n            <img src=\"images/json-download.svg\" id=\"json-download-button\" />\n        </a>\n    )\n    return items;\n}\n\n// Build header for plugin\nexport const pluginBoxHeader = function pluginBoxHeader (pluginName, info) {\n\n    const items = [];\n\n    items.push(\n        <div id=\"plugin-box-header\" key={\"plugin-box-header\" + pluginName}>\n            <div id=\"plugin-name\" key={\"plugin-name\" + pluginName}>{pluginName}</div>\n            {this.buildJSONDownloadIcon(pluginName)}\n            <img src=\"images/plugin-info.png\" id=\"plugin-info-button\" name={pluginName} onClick={() => this.pluginInfo(pluginName)} key={\"plugin-info-button\" + pluginName}/>\n            {this.infoBox(pluginName, info, pluginName)}\n        </div>\n    )\n    return items;\n}\n\n// Regular infobox\nexport const infoBox = function infoBox (name, info, header) {\n    var i = 0;\n    return (\n        <div id=\"info-box\" name={name} style={{display : \"none\"}} key={header + name}>\n            <img src=\"images/close-grey.png\" id=\"close-info-box\" name={name} onClick={() => this.pluginInfo(name)} />\n            <h2>{header}</h2>\n            {info.split('\\n').map(str => <p key={\"header\" + i++}>{str}</p>)}\n        </div>\n    )\n}\n\n// Create infobox that sets inner html to DOM elements\nexport const DOMParserInfoBox = function DOMParserInfoBox (name, info) {\n    return (\n        <div id=\"info-box\" name={name} style={{display : \"none\"}} key={name}>\n            <img src=\"images/close-grey.png\" id=\"close-info-box\" name={name} onClick={() => this.pluginInfo(name)} />\n            <div dangerouslySetInnerHTML={{__html: info}} key={\"danger\" + name} />\n        </div>\n    )\n}\n\n// Build footer for plugin\nexport const pluginContainerFooter = function pluginContainerFooter (pluginName, currentPage, pagesSum, showAll) {\n        \n    const items = [];\n\n    // Builds footer structure that contains show and hide buttons, visible pages displayed buttons and page change buttons \n    items.push (\n        <div id=\"options-block\">\n            <div id=\"option\" style={showAll === true ? {} : {display:\"none\"} } name={pluginName} onClick={(evt) => this.showLess(evt)}>Hide</div>\n            <div id=\"option\" style={showAll === false ? {} : {display:\"none\"} } name={pluginName} onClick={(evt) => this.showAll(evt)}>Show all</div>\n            <div id=\"amounts\">\n                <div id=\"amount\" style={showAll === false ? {} : {display:\"none\"} } name={pluginName} onClick={(evt) => this.visibleDataBlocks(evt)}>5</div>\n                <div id=\"amount\" style={showAll === false ? {} : {display:\"none\"} } name={pluginName} onClick={(evt) => this.visibleDataBlocks(evt)}>10</div>\n                <div id=\"amount\" style={showAll === false ? {} : {display:\"none\"} } name={pluginName} onClick={(evt) => this.visibleDataBlocks(evt)}>20</div>\n                <div id=\"amount\" style={showAll === false ? {} : {display:\"none\"} } name={pluginName} onClick={(evt) => this.visibleDataBlocks(evt)}>50</div>\n                <div id=\"amount\" style={showAll === false ? {} : {display:\"none\"} } name={pluginName} onClick={(evt) => this.visibleDataBlocks(evt)}>200</div>\n            </div>\n            <div id=\"pages\">\n                <div id=\"first-page\" style={currentPage === 1 || showAll === true ? {display:\"none\"} : {}} name={pluginName} onClick={(evt) => this.changePage(evt)}>1</div>\n                <div id=\"mid-page\" style={currentPage > 4 && showAll === false ? {} : {display:\"none\"}}>..</div>\n                <div id=\"mid-page\" style={currentPage > 3 && showAll === false ? {} : {display:\"none\"}} name={pluginName} onClick={(evt) => this.changePage(evt)}>{currentPage-2}</div>\n                <div id=\"mid-page\" style={currentPage > 2 && showAll === false ? {} : {display:\"none\"}} name={pluginName} onClick={(evt) => this.changePage(evt)}>{currentPage-1}</div>\n                <div id=\"current-page\" style={showAll === false ? {} : {display:\"none\"}} >{this.state.pages.pageNumber}</div>\n                <div id=\"mid-page\" style={currentPage < pagesSum-1 && showAll === false ? {} : {display:\"none\"}} name={pluginName} onClick={(evt) => this.changePage(evt)}>{currentPage+1}</div>\n                <div id=\"mid-page\" style={currentPage < pagesSum-2 && showAll === false ? {} : {display:\"none\"}} name={pluginName} onClick={(evt) => this.changePage(evt)}>{currentPage+2}</div>\n                <div id=\"mid-page\" style={currentPage < pagesSum-3 && showAll === false ? {} : {display:\"none\"}}>..</div>\n                <div id=\"last-page\" style={currentPage === pagesSum || showAll === true ? {display:\"none\"} : {}} name={pluginName} onClick={(evt) => this.changePage(evt)}>{pagesSum}</div>\n            </div>\n        </div>\n    )\n    return items;\n}\n\n// Build and return columns for plugin\nexport const pluginDataColumns = function pluginDataColumns (pluginName, columns) {\n\n    const items = [];\n\n    items.push(\n        <ul className=\"columns\" key={pluginName + \"columns\"}>\n            {columns.map((column, index) => (\n            <li id=\"column\" style={column.style} key={pluginName + + \"column\" + index}>\n                <div id=\"column-name\" key={pluginName + column + \"column-name\" + index}>{column.name}</div>\n                <ul id=\"column-arrows\" key={pluginName + column + \"column-arrows\" + index}>\n                    <li id=\"column-arrow-up\" key={pluginName + column + \"column-arrow-up\" + index} alt=\"asc\" name={pluginName} onClick={(evt) => this.displayOrder(evt)}>&uarr;</li>\n                    <li id=\"column-arrow-down\" key={pluginName + column + \"column-arrow-down\" + index} alt=\"desc\" name={pluginName} onClick={(evt) => this.displayOrder(evt)}>&darr;</li>\n                </ul>\n            </li>))}\n        </ul>\n    )\n    return items;\n}\n\n// Create empty data blocks as filling\nexport const pluginDataBlocksFill = function pluginDataBlocksFill (columns, ev, currentPage, dumpLength, showAll) {\n    const items = [];\n    const emptyBlocks = [];\n\n    if (showAll === true) {\n        return;\n    }\n\n    // Build empty blocks\n    Object.keys(columns).forEach((item, i, arr) => {\n        if(!arr[i + 1]) { // If last item, add right-side class to it\n            emptyBlocks.push(<li id=\"data-block\" className=\"right-side\" style={columns[item][\"style\"]} key={\"emptyblockright\" + i + columns[item]}></li>)\n        } else {\n            emptyBlocks.push(<li id=\"data-block\" style={columns[item][\"style\"]} key={\"emptyblockright\" + i + columns[item]}></li>)  \n        }\n    });\n\n    for (var i = dumpLength; i < currentPage*ev; i++) { // Wrap each created block inside container\n        items.push(\n            <ul id=\"plugin-data-container\" key={\"plugindatacontainer2\" + i + ev}>\n                {emptyBlocks}\n            </ul>\n        )\n    }\n    return items;\n}\n\n// Builds basic plugin box, which is used for most of the plugins to render their data\nexport const buildBasicPluginBox = function buildBasicPluginBox (pluginName, columns, info) {\n    const items = [];\n    var dumpData = this.state.dumpData // Pick dump data\n \n    try { // Check that plugin passes search filters\n        if (dumpData.length === 0) {\n            return null;\n        }\n    } catch (error) {\n        return null;\n    }\n\n    var currentPage = this.state.pages.pageNumber // Current page number\n    var showAll = this.state.pages.showAll // Should all data rows be shown (false or true)\n    var ev = this.state.pages.elementsVisible // How many elements visible - not relevant if showAll equals true\n    var pagesSum = Math.ceil(dumpData.length / ev); // How many pages there are overall\n\n    // Builds structure for the plugin\n    items.push(\n        <div id=\"inner-plugin-box\" className={pluginName} key={\"innerplugbox\" + pluginName}>\n            {this.pluginBoxHeader(pluginName, info)}\n            <div id=\"plugin-container\" key={\"plugincontainer\" + pluginName}>\n                <div className=\"plugin-columns\" name={pluginName} key={\"plugin-columns\" + pluginName}>\n                    {this.pluginDataColumns(pluginName, columns)}\n                </div>\n                <div name={pluginName} key={\"plugincontainer div\" + pluginName}>\n                    {dumpData.slice(showAll === true ? 0 : currentPage*ev-ev, showAll === true ? dumpData.length : currentPage*ev).map((key, index) => (\n                    <ul id=\"plugin-data-container\" key={\"plugindatacontainer\" + index + pluginName}>\n                        {columns.map((column, i, arr) => (\n                            (arr.length - 1 === i ? \n                                (<li id=\"data-block\" className=\"right-side\" style={column.style} key={\"datablock-right\" + i + key + index + pluginName}>{key[column[\"name\"]]}</li>) \n                                : (<li id=\"data-block\" style={column.style} key={\"datablock\" + i + key + index + pluginName}>{key[column[\"name\"]]}</li>))  \n                            ))}\n                    </ul>\n                    ))}\n                    {this.pluginDataBlocksFill(columns, ev, currentPage, dumpData.length, showAll)}\n                </div>\n                {this.pluginContainerFooter(pluginName, currentPage, pagesSum, showAll)}\n             </div>\n        </div>\n    );\n    return items;\n}","import $ from \"jquery\";\nimport React from \"react\";\nimport \"../Upload.css\";\nimport {buildInfoPopUp, showInfoPopUp} from \"../app/Utils.js\";\n\nclass DumpUpload extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dump: null,\n            os: \"windows\",\n            description: \"\",\n            chunkSize : 5000000\n        }\n        // State change\n        this.onDescriptionChange = this.onDescriptionChange.bind(this)\n        this.onFileChange = this.onFileChange.bind(this)\n        this.onOsChange = this.onOsChange.bind(this)\n        // Dump upload \n        this.uploadDump = this.uploadDump.bind(this)\n        this.uploadChunk = this.uploadChunk.bind(this)\n        this.progressBar = this.progressBar.bind(this)\n        // Pop-up \n        this.buildInfoPopUp = buildInfoPopUp.bind(this)\n        this.showInfoPopUp = showInfoPopUp.bind(this)\n    }\n\n    // Updates description-state to current textarea value\n    onDescriptionChange = event => {\n        this.setState({ description: event.target.value }); \n    }\n\n    // Updates os-state to current os-select value\n    onOsChange = event => { \n        this.setState({ os: event.target.value }); \n    };\n\n    // Updates dump-state to currently chosen dump\n    onFileChange = event => { \n        this.setState({ dump: event.target.files[0] });  \n    };\n\n    // Progress bar\n    async progressBar (currentChunk, lastChunk) {\n        var width = (currentChunk / lastChunk) * 100\n        $(\"#bar\").css(\"width\", width + \"%\");\n        $(\"#bar-text\").text(width.toFixed(2) + \"%\");\n        if($(\"#progress-bar-container\").css(\"display\") == \"none\") {\n            $(\"#progress-bar-container\").css(\"display\", \"block\")\n        }\n        if (currentChunk === lastChunk) {\n            this.showInfoPopUp(\"File: \" + this.state.dump.name + \" uploaded\", \"#5DD55D\", false)\n            setTimeout( function() {\n                $(\"#bar\").css(\"width\", \"0%\")\n                $(\"#progress-bar-container\").css(\"display\", \"none\")\n            }, 3000);\n        }\n    }\n\n    // Send dump in chunks to back end\n    async uploadDump(ev) {\n        ev.preventDefault();\n        if (this.state.dump == null) {\n            this.showInfoPopUp(\"Select dump to upload\", \"#FF4D4D\", false)\n            return;\n        }\n        if (this.state.os == null) {\n            this.showInfoPopUp(\"Select operating system\", \"#FF4D4D\", false)\n            return;\n        }\n        var start = 0;\n        var end = this.state.chunkSize;\n        var file = this.state.dump;\n        var total = file.size; // Get file size \n        var system = this.state.os;\n        var description = this.state.description;\n        var requestsCounter = Math.ceil(total / this.state.chunkSize) // Calculate how many requests have to be made\n        var url = \"http://autovola.com:8080/api/v1/upload/dump/\"\n        var blob = file.slice(start, end);\n        var file_id = new Date().getTime()\n        var data = new FormData();\n        data.set('last_chunk', requestsCounter);\n        data.set('file_id', file_id);\n        data.set('system', system);\n        data.set('filename', file.name);\n        data.set('description', description);\n\n        for (var i = 1; i <= requestsCounter; i++) { // send file in chunks one by one to server\n            blob = file.slice(start, end)\n            data.set('chunk', blob);\n            data.set('current_chunk', i);\n            if (this.uploadChunk(data, file, url) !== true) { // chunk upload fails\n                this.showInfoPopUp(\"Failed to send \" + file.name, \"#FF4D4D\", false)\n                break;\n            }\n            start = start + this.state.chunkSize; // Calculate next chunk starting point\n            end = start + this.state.chunkSize; // Calculate next chunk ending point\n            this.progressBar(i, requestsCounter);\n        }\n    };\n\n    // Upload dump in chunks to back end\n    uploadChunk(data, file, url) {\n        var proceed = true // false = file upload is stopped / true = keep uploading\n        $.ajax({\n            contentType: false,\n            processData: false,\n            cache: false,\n            enctype: 'multipart/form-data',\n            headers: {'Access-Control-Allow-Origin': '*' },\n            url: url,\n            tryCount : 0,\n            retryLimit : 3,\n            type: \"POST\", \n            data: data,\n            async: false,\n            complete: function(data, textStatus, jqXHR){\n                try {\n                    if (data.responseJSON.response === \"Fail\") { // If fail is received too many times, upload is cancelled\n                        this.tryCount++;\n                        if (this.tryCount <= this.retryLimit) {\n                            $.ajax(this);\n                            proceed = true;\n                        }\n                        proceed = false;\n                    }\n                    else if (data.responseJSON.response === \"Done\") { // Upload is complete\n                        console.log(\"File: \" + file.name + \" uploaded\")\n                    }\n                    else if (data.responseJSON.response === \"OK\") { // OK received -->  upload can continue\n                        proceed = true;\n                    }\n                    else { // Something else was returned\n                        console.log(\"Server returned: \" + String(data.responseJSON.response))\n                    }\n                } catch(err) {\n                    proceed = false;\n                }\n            },\n        })\n        return proceed;\n    };\n  \n    render() {\n        return (\n            <div id=\"container\">\n                {this.buildInfoPopUp()}\n                <form method=\"post\" id=\"data\" encType=\"multipart/form-data\" onSubmit={this.uploadDump}>\n                    <h1>Choose memory dump to upload</h1>\n                    <div className=\"input-container\">  \n                        <input type=\"file\" id=\"dump\" name=\"dump\" onChange={this.onFileChange}></input>\n                    </div>\n                    <select name=\"os\" id=\"os-dropdown\" onChange={this.onOsChange} value={this.state.os}>\n                        <option disabled> Select OS</option>\n                        <option value=\"linux\">Linux</option>\n                        <option value=\"windows\">Windows</option>\n                    </select>\n                    <div id=\"description-container\">\n                        <textarea type=\"text\" id=\"description\" name=\"description\" placeholder=\"Add description (Optional)\" onChange={this.onDescriptionChange}></textarea>\n                    </div>\n                    <button id=\"upload-btn\"> Upload </button>\n                </form>\n                <div id=\"progress-bar-container\">\n                    <div id=\"bar\"></div>\n                    <p id=\"bar-text\"></p>\n                </div>\n                <div id=\"manual\">\n                    <h2>Usage</h2>\n                    <p>Select dump you want to analyse and choose operating system from which the dump was taken from.</p>\n                    <p>In the description field you can write notes about the dump. Description can be modified later at any time.</p>\n                    <p>This version of Autovola supports analysis of Windows and Linux dumps.</p>\n                    <p>During the upload, page will be unresponsive.</p>\n                    <p><b>Known issues:</b> Progress bar may not be visible with Chrome browsers when uploading dump.</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DumpUpload;","import $ from \"jquery\";\nimport React from \"react\";\nimport \"../Upload.css\";\nimport \"./Symbols.css\";\nimport {buildInfoPopUp, showInfoPopUp} from \"../app/Utils.js\";\n\nclass SymbolUpload extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            symbolTable: null, // Symbol file\n            os: \"linux\", // Operating System (Windows or Linux currently)\n            chunkSize : 5000000, // Sets amount of bytes to be sent in one chunk\n            windowsSubDir : \"ntkrnlmp.pdb\" // Windows sub dir name\n        }\n        // State change\n        this.onFileChange = this.onFileChange.bind(this)\n        this.onOsChange = this.onOsChange.bind(this)\n        this.onSubDirChange = this.onSubDirChange.bind(this)\n        // Symbol upload\n        this.uploadSymbolTable = this.uploadSymbolTable.bind(this)\n        this.uploadChunk = this.uploadChunk.bind(this)\n        // Pop-up functions\n        this.buildInfoPopUp = buildInfoPopUp.bind(this)\n        this.showInfoPopUp = showInfoPopUp.bind(this)\n    }\n\n    // Set sub dir\n    onSubDirChange = event => { \n        this.setState({ windowsSubDir: event.target.value });\n    }\n\n    // Update OS\n    onOsChange = event => { \n\n        if (event.target.value === \"windows\") {\n            $(\"#windows-sub-dir-dropdown\").css(\"display\", \"block\") // Show sub dir dropdown\n            this.setState({ os: event.target.value });\n        } \n        else { // If linux or other\n            $(\"#windows-sub-dir-dropdown\").hide()\n            this.setState({ os: event.target.value, windowsSubDir: null });  \n        }\n    };\n\n    // Set symbol file location\n    onFileChange = event => { \n        // Update name of file\n        this.setState({ symbolTable: event.target.files[0] }); \n    };\n\n    // Display upload progress bar to user\n    async progressBar (currentChunk, lastChunk) {\n        var width = (currentChunk / lastChunk) * 100\n        $(\"#bar\").css(\"width\", width + \"%\");\n        $(\"#bar-text\").text(width.toFixed(2) + \"%\");\n        if($(\"#progress-bar-container\").css(\"display\") == \"none\") {\n            $(\"#progress-bar-container\").css(\"display\", \"block\")\n        }\n        if (currentChunk === lastChunk) { // Hide progress bar after upload is complete\n            this.showInfoPopUp(\"File: \" + this.state.symbolTable.name + \" uploaded\", \"#5DD55D\", false)\n            setTimeout( function() {\n                $(\"#bar\").css(\"width\", \"0%\")\n                $(\"#progress-bar-container\").css(\"display\", \"none\")\n            }, 3000);\n        }\n    }\n\n    // Send symbol file in chunks to back end\n    async uploadSymbolTable(ev) {\n        ev.preventDefault();\n        if (this.state.symbolTable == null) {\n            this.showInfoPopUp(\"Select ISF to upload\", \"#FF4D4D\", false)\n            return;\n        }\n        if (this.state.os == null) {\n            this.showInfoPopUp(\"Select operating system\", \"#FF4D4D\", false)\n            return;\n        }\n        var start = 0;\n        var end = this.state.chunkSize;\n        var file = this.state.symbolTable\n        var total = file.size\n        var system = this.state.os;\n        var requestsCounter = Math.ceil(total / this.state.chunkSize) // Calculate how many requests have to be made\n        var url = \"http://autovola.com:8080/api/v1/upload/symbols/\"\n        var blob = file.slice(start, end);\n        var file_id = new Date().getTime()\n        var data = new FormData();\n        if (system === \"windows\") { // Add user selected Windows directory to form\n            if (this.state.windowsSubDir == null) {\n                this.showInfoPopUp(\"Select Windows sub dir\", \"#FF4D4D\", false)\n                return;\n            }\n            data.set('windir', this.state.windowsSubDir);\n        }\n        data.set('last_chunk', requestsCounter);\n        data.set('file_id', file_id);\n        data.set('system', system);\n        data.set('filename', file.name);\n\n        for (var i = 1; i <= requestsCounter; i++) { // send file in chunks one by one to back end\n            blob = file.slice(start, end)\n            data.set('chunk', blob);\n            data.set('current_chunk', i);\n            if (this.uploadChunk(data, file, url) !== true) { // chunk upload fails\n                this.showInfoPopUp(\"Failed to send \" + file.name, \"#FF4D4D\", false)\n                break;\n            }\n            start = start + this.state.chunkSize; // Calculate next chunk starting point\n            end = start + this.state.chunkSize; // Calculate next chunk ending point\n            this.progressBar(i, requestsCounter);\n        }\n    };\n\n    // Upload file in chunks to back end\n    uploadChunk(data, file, url) {\n        var proceed = true // false = file upload is stopped / true = keep uploading\n        $.ajax({\n            contentType: false,\n            processData: false,\n            cache: false,\n            enctype: 'multipart/form-data',\n            headers: {'Access-Control-Allow-Origin': '*' },\n            url: url,\n            retryLimit : 3, // How many times Fail response can be received before stopping upload\n            tryCount: 0,\n            type: \"POST\", \n            data: data,\n            async: false,\n            complete: function(data, textStatus, jqXHR){\n                try {\n                    if (data.responseJSON.response === \"Fail\") { // If fail is received too many times, upload is cancelled\n                        this.tryCount++;\n                        if (this.tryCount <= this.retryLimit) { // Try few times again\n                            $.ajax(this);\n                            proceed = true;\n                        }\n                        proceed = false;\n                    }\n                    else if (data.responseJSON.response === \"Done\") { // Upload is complete\n                        console.log(\"File: \" + file.name + \" uploaded\")\n                    }\n                    else if (data.responseJSON.response === \"OK\") { // OK received -->  upload can continue by setting proceed to true\n                        proceed = true;\n                    }\n                    else { // Something else was returned\n                        console.log(\"Response from server: \" + String(data.responseJSON.response))\n                    }\n                } catch(err) {\n                    proceed = false;\n                }\n            },\n        })\n        return proceed;\n    };\n\n    render() {\n        return (\n            <div id=\"container\">\n                {this.buildInfoPopUp()}\n                <form method=\"post\" id=\"data\" encType=\"multipart/form-data\" onSubmit={this.uploadSymbolTable}>\n                    <h1>Choose ISF to upload</h1>\n                    <div className=\"input-container\">  \n                        <input type=\"file\" id=\"symbol-table\" name=\"symbol-table\" onChange={this.onFileChange}></input>\n                    </div>\n                    <select name=\"os\" id=\"os-dropdown\" onChange={this.onOsChange} value={this.state.os}>\n                        <option disabled> Select OS </option>\n                        <option value=\"linux\">Linux</option>\n                        <option value=\"windows\">Windows</option>\n                    </select>\n                    <select name=\"windows-sub-dir\" id=\"windows-sub-dir-dropdown\"  value={this.state.windowsSubDir} onChange={this.onSubDirChange}>\n                        <option disabled> Select Windows sub directory </option>\n                        <option value=\"ntkrnlmp.pdb\">ntkrnlmp.pdb</option>\n                        <option value=\"ntkrnlpa.pdb\">ntkrnlpa.pdb</option>\n                        <option value=\"ntkrpamp.pdb\">ntkrpamp.pdb</option>\n                        <option value=\"ntoskrnl.pdb\">ntoskrnl.pdb</option>\n                    </select>\n                    <button id=\"upload-btn\"> Upload </button>\n                </form>\n                <div id=\"progress-bar-container\">\n                    <div id=\"bar\"></div>\n                    <p id=\"bar-text\"></p>\n                </div>\n                <div id=\"manual\">\n                    <h2>Usage</h2>\n                    <p>Intermediate symbol files (ISF) are stored as JSON, so when uploading symbol file make sure that the file has .json extension. Alternatively GZIP and XZ compressed JSON files are accepted, so if the symbol file is compressed it should be given corresponding extension .json.gz or .json.xz.</p>\n                    <p>It is good practice to test the symbol file locally before uploading it to Autovola. You can achieve this by following these steps in LINUX system (Steps are similar for Windows, but paths and commands are bit different):</p>\n                    <p>1. Move the file to <span style={{color: \"CornflowerBlue\"}}>(top-level Volatility path)/volatility3/framework/symbols/(windows or linux)/filename.json</span> </p>\n                    <p>2. Remove Volatility cache for user running the plugin <span style={{color: \"grey\"}}>rm ~/.cache/volatility3/*</span></p>\n                    <p>3. Then use either Volatility Linux or Windows plugin to dump and check that no symbol table or translation layer requirement errors are seen. <b>NOTE:</b> For windows dumps Volatility tries to automatically download corresponding PDB file from Microsoft's Symbol Server as stated in Windows section, so the manually added symbol file may not be correct.</p>\n                    <h3>Windows</h3>\n                    <p>Autovola contains these Windows symbol files for default <a href=\"https://downloads.volatilityfoundation.org/volatility3/symbols/windows.zip\">windows.zip</a>.</p>\n                    <p>Volatility tries to automatically download PDB file from Microsoft’s Symbol Server if appropriate symbol file is not found locally. If Autovola is not connected to internet, symbol file can be created manually.</p>\n                    <p>For windows symbol tables, volatility uses <span style={{color: \"green\"}}>&lt;pdb-name&gt;/&lt;GUID&gt;-&lt;AGE&gt;.json</span> naming convention.</p>\n                    <p>These JSON files can be constructed from PDB-files using Volatility 3 tool called pdbconv.py. It can be run directly from top-level Volatility path by using command <span style={{color: \"grey\"}}>PYTHONPATH=\".\" python volatility3/framework/symbols/windows/pdbconv.py</span></p>\n                    <p>Autovola supports uploading of pdbconv.py converted ntkrnlmp.pdb, ntkrnlpa.pdb, ntkrpamp.pdb and ntoskrnl.pdb files. When uploading ISF processed by pdbconv, remember to select the right sub directory or Volatility is not able to find the ISF.</p>\n                    <h4>Windows version 20H2 build 19042.804 example</h4>\n                    <ol>\n                        <li>Start by cloning Volatility 3 by running <b>git clone https://github.com/volatilityfoundation/volatility3</b>. Install Volatility 3 python package by running <b>python3 setup.py install</b> in Volatility 3 base folder.</li>\n                        <li>Download <a style={{\"textAlign\": \"left\"}} href=\"https://github.com/rajkumar-rangaraj/PDB-Downloader/releases/download/v1.0/PDBDownloader.exe\">PDBDownloader.exe</a>. PDB Downloader is used to get symbol files for specific libraries from Microsoft’s Symbol Server.</li>\n                        <li>Start PDB Downloader and click button <b>Open File(s)</b>.</li>\n                        <li>Select <b>C:\\Windows\\System32\\ntoskrnl.exe</b> and press start on PDB Downloader. PDB Downloader should download the right PDB file somewhere under C:\\Symbols and open file explorer in C:\\Symbols.</li>\n                        <li>There should be a directory called ntkrnlmp.pdb and inside that is directory 5278AFF86C341677D7D7835C85B7B8441 (GUID), which contains PDB file ntkrnlmp.pdb. Save this file for Volatility's pdbconv.</li>\n                        <li>(For Linux) Go to Volatility3 base directory and run <b>python3 volatility3/framework/symbols/windows/pdbconv.py -f ~/ntkrnlmp.pdb</b>. -f flag specifies the PDB file location. In this example it is user's home directory.</li>\n                        <li>Volatility creates ISF in base folder with name similar to this: 5278AFF86C341677D7D7835C85B7B844-5.json.xz. <b>Do not change the file name!</b> Now upload that ISF to Autovola by setting OS to Windows and Windows Sub Directory to <b>ntkrnlmp.pdb</b></li>\n                        <li>Now Volatility should be able to analyse all dumps taken from Windows systems similar to this.</li>\n                    </ol>\n                    <h3>Linux</h3>\n                    <p>All Linux symbol files have to be created manually due to large amount of kernel versions and different distributions that get frequently updated.</p>\n                    <p>Volatility foundation offers GO written tool called <a href=\"https://github.com/volatilityfoundation/dwarf2json\">dwarf2json</a> for this purpose. Tool can be used to create ISF (Intermediate Symbol File) JSON file, which serves as proper symbol file for Linux and MacOS's.</p>\n                    <p>dwarf2json has good documentation of how to create proper symbol file for Linux. Easiest way is to use kernel debug symbol file to generate ISF from Linux system, from which the dump is created from.</p>\n                    <p>If kernel debug symbol file is not available and you are experiencing difficulties trying to generate proper ISF, there is also <a href=\"https://github.com/volatilityfoundation/dwarf2json/tree/linux-module-method\">linux-module-method</a> branch, which offers alternative way to create ISF.</p>\n                    <h3>Helpful links</h3>\n                    <ul>\n                        <li><a style={{\"textAlign\": \"left\"}} href=\"https://github.com/volatilityfoundation/volatility3\">Volatility 3 GitHub page</a></li>\n                        <li><a style={{\"textAlign\": \"left\"}} href=\"https://volatility3.readthedocs.io/en/latest/symbol-tables.html\">Official Volatility foundation symbol file creation documentation</a></li>\n                        <li><a style={{\"textAlign\": \"left\"}} href=\"https://docs.microsoft.com/en-us/archive/blogs/webtopics/pdb-downloader\">Microsoft documentation of PDB Downloader</a></li>\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SymbolUpload;","import $ from \"jquery\";\n\n// Calls processFilters and saves processed search filters to search-state\nexport const setSearch = function setSearch (searchData) {\n    var filteredSearchData = this.processFilters(searchData)\n    this.setState({search: filteredSearchData})\n}\n\n// Dump page search bar\nexport const searchBar = function searchBar () {\n    const items = [];\n\n    items.push( \n        <form id=\"plugin-search-container\" onSubmit={(evt) => { evt.preventDefault(); this.setSearch($('[name=\"search\"]')[0].value)}}> {/* Stop page reload with prevent default */}\n            <button className=\"search-btn\" onClick={() => this.setSearch($('[name=\"search\"]')[0].value)}> Search </button>\n            <input type=\"text\" className=\"search-field\" name=\"search\"></input>\n        </form>\n    )\n    return items;\n}\n\n// Processes searches done in reports page\nexport const reportSearch = function reportSearch (reportData, filter, os) {\n\n    if (filter == \"\" || (reportData == null)) {\n        return reportData;\n    }\n\n    var filteredData = [];\n\n    if (filter.startsWith(\"GLOBAL \")) { // All dumps search\n        filter = filter.replace(\"GLOBAL \", \"\")\n        filteredData = this.checkReports(filter, reportData, os);\n    }\n    else if (filter.startsWith(\"LINUX \")) { // Linux dumps search\n        if (os === \"windows\") {\n            return;\n        }\n        filter = filter.replace(\"LINUX \", \"\") \n        filteredData = this.checkReports(filter, reportData, os);\n    }\n    else if (filter.startsWith(\"WINDOWS \")) { // Windows dumps search\n        if (os === \"linux\") {\n            return;\n        }\n        filter = filter.replace(\"WINDOWS \", \"\")\n        filteredData = this.checkReports(filter, reportData, os);\n    }\n    else { // Visible reports data search\n        var filters = [];\n        filters = filter.match(/(\\([^)]*\\)|\\S)*/ig).filter(Boolean)\n    \n        filteredData = reportData.filter(function (node) {\n        \n            var filterList = filters;\n    \n            for (var value in node) {\n                // Skip empty arrays\n                try {\n                    if(node[value].length == 0) {\n                        continue;\n                    }\n                }\n                catch(err) {\n                    continue;\n                } // Check that filter contains\n                if (filterList.filter(a =>String(node[value]).includes(a))) {\n                    var removedFilters = filterList.filter(a =>String(node[value]).includes(a))\n                    filterList = filterList.filter( function( el ) {\n                        return !removedFilters.includes( el );\n                    });\n                }\n            }\n            if (filterList.length === 0) {\n                return node;\n            }\n        }, this);\n    }\n    return filteredData;\n}\n\n// Goes through all chosen OS reports and returns the ones that pass filters\nexport const checkReports = function checkReports (filter, reportData, os) {\n    var filteredData = [];\n    var filteredSearch = processFilters(filter) // Turn filters into structured format\n    const ignore = [\"_id\", \"analyse_state\", \"description\", \"dumpsize\", \"currenttime\", \"os_info\", \"name\", \"tags\"] // Ignore keys in search\n    if (filteredSearch.length === 0) {\n        return reportData;\n    }\n    else {\n        filteredData = reportData.filter(function (node) { // Proceed through dump reports\n            var dumpData = this.getReports(os, node._id) // Get full report containing all plugin data for filtering\n            for (let key in dumpData) {  // Remove ignored object keys\n                if (ignore.includes(key)) {\n                    delete dumpData[key]\n                }\n            }\n            \n            dumpData = Object.keys(dumpData).map(key => { // Turn object into array\n                return dumpData[key];\n            });\n\n            dumpData = dumpData.filter(el => { // Check that plugin data does not contain any of these\n                return el != null && el != '' && el != \"ERROR\" && el != \"UNDEFINED\";\n            });\n            \n            dumpData = dumpData.filter( function( plugin ) { // proceed through plugins\n\n                let filters = filteredSearch;\n                filters = removeFilters(filters, plugin[0]);\n                try {\n                    plugin = plugin.filter(function (pluginDataBlock) { // proceed through each data block in plugin\n                        return this.filterSearch(pluginDataBlock, filters);\n                    }, this);\n                    if (plugin.length > 0) { // If atleast 1 plugin data blcok passed filters, return it\n                        return plugin;\n                    }\n                } catch (err) {}\n            }, this);\n            if (dumpData.length > 0) { // If dumpData isn't empty, return dump and it will be listed to user\n                return node;\n            }\n        }, this);\n    }\n    return filteredData; // Return dumps that will be listed to user\n} \n\n// Some filters that might negatively affect the results of plugin are removed\nexport const removeFilters = function removeFilters (filters, pluginData) {\n\n    var filtersCopy = filters;\n\n    var filtersLength = filters.length;\n    for (var i = 0; i < filtersLength; i ++) { // Loop through filters\n        if (filters[i].hasOwnProperty(\"\")) { // No column name specified, nothing needs to be done\n            continue;\n        }\n        else if (Array.isArray(filters[i])) { // Variable is array\n            let nestedFilters = removeFilters(filters[i], pluginData) // Recursive call\n            if (nestedFilters.length === 0) { // If recursive call gives empty array, it can be removed from filters\n                filtersCopy = filtersCopy.filter(function(flt) { return ![nestedFilters].includes(flt); });\n            }\n            else { // Update corresponding nested filter with updated version of it\n                let filter = filters[i].indexOf(filters[i]);\n                if (filter !== -1) {\n                    filtersCopy[filter] = nestedFilters;\n                }\n            }\n        }\n        else if (typeof filters[i] === 'object' && filters[i] !== null) { // If variable is object\n            if (filters[i][Object.keys(filters[i])[0]].negate === true) { // If negating search keyword\n                let columnMatch = false;\n\n                try {\n                    for (const [key, value] of Object.entries(pluginData)) { // If same Column name is found from pluginData and filter\n                        if (Object.keys(filters[i])[0] === key) {\n                            columnMatch = true;\n                        }\n                    }\n                    if (columnMatch === false) { // If filter column name is not found from pluginData, filter is removed and max 1 Logical OR next to it\n                        filtersCopy = filtersCopy.filter(function(flt) { return ![filters[i]].includes(flt); });\n                        if (filters[i-1] === \"OR\" || (filters[i-1] === \"OR\" && filters[i+1] === \"OR\")) {\n                            filtersCopy = filtersCopy.filter(function(flt) { return ![filters[i-1]].includes(flt); });\n                        } \n                        else if (filters[i+1] === \"OR\") {\n                            filtersCopy = filtersCopy.filter(function(flt) { return ![filters[i+1]].includes(flt); });\n                        }\n                    } else {\n                        continue;\n                    }\n                } catch (error) {}\n            } else {\n                continue;\n            }\n        }\n    }\n    return filtersCopy\n}\n\n// Return plugin data after running search filters to it\nexport const search = function search (pluginData) {\n    var filters = this.state.search;\n    if (filters === \"\" || pluginData == null || pluginData === \"ERROR\" || pluginData === \"UNSATISFIED\") { // Return if no data\n        return pluginData;\n    }\n\n    // Remove unnecessary filters for this particular plugin\n    filters = removeFilters(filters, pluginData[0]);\n\n    try { // If error happens while filtering, return empty array\n        pluginData = pluginData.filter(function (pluginDataBlock) { // Filter each object one by one\n            return this.filterSearch(pluginDataBlock, filters);\n        }, this);\n    } catch (err) {\n        pluginData = [];\n    }\n    return pluginData;\n}\n\n// Recursively goes throug all filters and creates data structure that filterSearch can process\nexport const processFilters = function processFilters (filter) {\n    var filters = [];\n    try { // Regex to put search string into desired parts\n        filters = filter.match(/((\"((?:\\\\.|[^\"\\\\])*)\"):((\"((?:\\\\.|[^\"\\\\])*)\")|((?<!\\\\)\\(.*?(?<!\\\\)\\))))|((?<!\\\\)(\"|-\").*?(?<!\\\\)\")|(?<!\\\\)\\(.*?(?<!\\\\)\\)|([^\\s]*:((\"((?:\\\\.|[^\"\\\\])*)\")|((?<!\\\\)\\(.*?(?<!\\\\)\\))))|(\\S+)/ig).filter(Boolean)\n    } catch (error) {\n        return \"\";\n    }\n\n    filters = filters.map(element => {\n        if (element.charAt(0) === \"(\" && element.slice(-1) === \")\") {\n            element = element.substring(1); // Remove \"(\" from beginning of string\n            element = element.slice(0, -1); // Remove \")\" from end of string\n            element = processFilters(element); // Recursively call this function again\n        }\n\n        let negate = false;\n        let columnObj = {};\n        if (Array.isArray(element)) { // Return nested filter\n            return element;\n        }\n        else if (element === \"OR\") { // OR does not need modifications\n            columnObj = {\"type\": \"logical\", \"value\": \"OR\"};\n            return columnObj;\n        } \n        else if (/\\S+(?<!\\\\):\\(.*?(?<!\\\\)(\\)|\\\\\\))/.test(element)) { // Check if range selection\n            if (element.charAt(0) === \"-\") { // Check if there is minus front of the column name\n                negate = true;\n                element = element.substring(1); // remove - from column name\n            }\n            if (element.charAt(0) === \"\\\"\") { // If column name is inside quotation marks\n                var columnName = element.split(\"\\\":(\")[0].substring(1)\n            } else {\n                var columnName = element.split(\":(\")[0]\n            }\n            if (element.includes(\"\\\\\")) {\n                element = element.replace(/(?:\\\\(.))/g, \"$1\") // Remove single backslashes\n            }\n            let columnRangeValue = element.match(/\\(([^)]+)\\)/)[1].replace(/\\s/g,'');\n            let start = columnRangeValue.split(\"-\")[0]\n            let end = columnRangeValue.split(\"-\")[1]\n            columnObj[columnName] = {\"type\": \"range\", \"start\": parseInt(start), \"end\": parseInt(end), \"negate\": negate};\n            return columnObj;\n        }\n        else if (/[^\\s]*:\"(?:[^\"\\\\]|\\\\.)*\"/.test(element)) { // Column name before quotation marks\n            if (element.charAt(0) === \"-\") { // Check if there is minus front of the column name\n                negate = true;\n\n                element = element.substring(1); // remove - from column name\n            }\n            if (element.charAt(0) === \"\\\"\") { // If column name is inside quotation marks\n                var columnName = element.split(\"\\\":\\\"\")[0].substring(1)\n                var columnValue = element.split(\":\\\"\")[1].slice(0, -1)\n            } else {\n                var columnName = element.split(\":\\\"\")[0]\n                var columnValue = element.split(\":\\\"\")[1].slice(0, -1)\n            }\n            columnObj[columnName] = {\"type\": \"value\", \"value\": columnValue, \"negate\": negate};\n            return columnObj;\n        }\n        else {\n            if (element.charAt(0) === \"-\") { // Check if there is minus front of the column name\n                negate = true;\n                element = element.substring(1); // remove minus from column name\n            }\n            if (element.charAt(0) === \"\\\"\" && element.slice(-1) === \"\\\"\") { // Check if quotation marks around filter\n                element = element.substring(1);  // Remove \" from beginning of string\n                element = element.slice(0, -1); // Remove \" from end of string\n            }\n            let columnName = \"\";\n            let columnValue = element;\n            columnObj[columnName] = {\"type\": \"value\", \"value\": columnValue, \"negate\": negate};\n            return columnObj;\n        }\n    });\n    return filters;\n}\n\n// Returns each data block, which passes all filters\nexport const filterSearch = function filterSearch (pluginDataBlock, filters, nested=false) {\n\n    var filtersCopy = filters; // If filtersCopy is emptied, Data block is returned and will be shown to user\n\n    for (var block in pluginDataBlock) { // Loop through single plugin data block\n        var filterLength = filters.length; // Filters amount\n        var or = false; // logical or - Set to true if \"OR\" is filter value\n        var negateAllFilterFail = false; // Used to check if all-matchin negating filter fails and is in OR combined filters.\n        if (filtersCopy.length === 0 && nested === false) {\n            return pluginDataBlock;\n        }\n        for (var i = 0; i < filterLength; i++) { // Loop through filters\n            if (filters[i].constructor === Object && filters[i] !== null) { // If filter is object\n                try {\n                    if (filters[i].hasOwnProperty(\"type\")) { // If logical OR\n                        if (filters[i].value === \"OR\") {\n                            if (!filtersCopy.indexOf(filters[i-1])) { // If previous filter has not been passed\n                                or = true; // Set or to true\n                            }\n                            else if (filtersCopy.indexOf(filters[i-1])) { // If previous filter has been passed\n                                filtersCopy = filtersCopy.filter(function(flt) { return flt !== filters[i]; }); // Remove \"OR\" and next filter \n                                filtersCopy = filtersCopy.filter(function(flt) { return flt !== filters[i+1]; });\n                            }\n                        }\n                    }\n                    else if (filters[i].hasOwnProperty(block)) { // Filter column matches the data block column\n                        if (filters[i][block].type === \"value\") { // Filter type is value\n                            let regex = new RegExp('^' + String(filters[i][block].value).replace(/\\*/g, '.*') + '$')  // Turn filter into regex\n                            let regexResult = (regex).test(pluginDataBlock[block])\n                            if (regexResult && filters[i][block].negate === false) {\n                                if (or === false) {\n                                    filtersCopy = filtersCopy.filter(function(flt) { return flt !== filters[i]; });  // remove filter\n                                } else if (or === true) { \n                                    try {\n                                        filtersCopy = filtersCopy.filter(function(flt) { return ![filters[i], filters[i-1], filters[i-2]].includes(flt); }); // remove OR combined filters\n                                    } catch (error) {\n                                        filtersCopy = filtersCopy.filter(function(flt) { return ![filters[i], filters[i-1]].includes(flt); });\n                                    }\n                                }\n                                negateAllFilterFail = false;\n                            }\n                            else if (!regexResult && filters[i][block].negate === true) {\n                                if (or === false) {\n                                    filtersCopy = filtersCopy.filter(function(flt) { return flt !== filters[i]; });  // remove filter\n                                } else if (or === true) {\n                                    filtersCopy = filtersCopy.filter(function(flt) { return ![filters[i], filters[i-1], filters[i-2]].includes(flt); });  // remove OR combined filters\n                                }\n                                negateAllFilterFail = false;\n                            }\n                            else if (negateAllFilterFail === true) {\n                                if (nested)\n                                    return false;\n                                else\n                                    return;\n                            }\n                            or = false;\n                        }\n                        else if (filters[i][block].type === \"range\") { // Filter type is range\n                            if ((filters[i][block].start <= parseInt(pluginDataBlock[block]) && filters[i][block].end >= parseInt(pluginDataBlock[block])) && filters[i][block].negate === false) { // Data block value matches range and negate is false\n                                if (or === false) {\n                                    filtersCopy = filtersCopy.filter(function(flt) { return flt !== filters[i]; });  // remove filter\n                                } else if (or === true) {\n                                    filtersCopy = filtersCopy.filter(function(flt) { return ![filters[i], filters[i-1], filters[i-2]].includes(flt); });  // remove OR combined filters\n                                }\n                                negateAllFilterFail = false;\n                            }\n                            else if (!(filters[i][block].start <= parseInt(pluginDataBlock[block]) && filters[i][block].end >= parseInt(pluginDataBlock[block])) && filters[i][block].negate === true) { // Data block does not match range and negate is true\n                                if (or === false) {\n                                    filtersCopy = filtersCopy.filter(function(flt) { return flt !== filters[i]; });  // remove filter\n                                } else if (or === true) {\n                                    filtersCopy = filtersCopy.filter(function(flt) { return ![filters[i], filters[i-1], filters[i-2]].includes(flt); });  // remove OR combined filters\n                                }\n                                negateAllFilterFail = false;\n                            }\n                            else if (negateAllFilterFail === true) {\n                                if (nested)\n                                    return false;\n                                else\n                                    return;\n                            }\n                            or = false;\n                        }\n                    }\n                    else if (filters[i].hasOwnProperty(\"\")) { // Filter applies to all data blocks\n                        if (filters[i][\"\"].type === \"value\") { // Filter type is value\n                            let regex = new RegExp('^' + String(filters[i][\"\"].value).replace(/\\*/g, '.*') + '$')  // Turn filter into regex\n                            let regexResult = (regex).test(pluginDataBlock[block])\n                            if (regexResult && filters[i][\"\"].negate === false) { // Filter is inclusive and passes test\n                                if (or === false) {\n                                    filtersCopy = filtersCopy.filter(function(flt) { return flt !== filters[i]; });  // remove filter\n                                } \n                                else if (or === true) {\n                                    filtersCopy = filtersCopy.filter(function(flt) { return ![filters[i], filters[i-1], filters[i-2]].includes(flt); });  // remove filter\n                                }\n                                negateAllFilterFail = false;\n                            }\n                            else if (!regexResult && filters[i][\"\"].negate === true) { // Filter is negating and does not pass test\n                                if (or === false) {\n                                    filtersCopy = filtersCopy.filter(function(flt) { return flt !== filters[i]; });  // remove filter\n                                } else if (or === true) {\n                                    filtersCopy = filtersCopy.filter(function(flt) { return ![filters[i], filters[i-1], filters[i-2]].includes(flt); });  // remove OR combined filters\n                                }\n                                negateAllFilterFail = false;\n                            }\n                            else if (negateAllFilterFail === true) {\n                                if (nested)\n                                    return \"fail\"; // Do not add data block - return from 1st recursion\n                                else\n                                    return;\n                            }\n                            else if (regexResult && filters[i][\"\"].negate === true) { // Filter is negating and passes test\n                                try {\n                                    if (filters[i+1].value === \"OR\") { // If next value is OR\n                                        negateAllFilterFail = true; // Set negateAllFilterFail to true\n                                        continue;\n                                    } else {\n                                        if (nested)\n                                            return \"fail\"; // Do not add data block - return from 1st recursion\n                                        else\n                                            return;\n                                    }\n                                } catch (error) {\n                                    if (nested)\n                                        return \"fail\"; // Do not add data block - return from 1st recursion\n                                    else\n                                        return;\n                                }\n                            }\n                        }\n                        or = false;\n                    }\n                } catch (error) {\n                    continue;\n                }\n            }\n            else if (Array.isArray(filters[i])) { // Nested filters, run filterSearch recursively, but set optional parameter nested to true\n                let nestedBlock = new Object; // Create object for the current block being tested from pluginDataBlocks\n                nestedBlock[block] = pluginDataBlock[block];\n                var nestedSearch = this.filterSearch(pluginDataBlock, filters[i], true); // Run recursive search\n                if (nestedSearch  === true) { //\n                    if (or === false) {\n                        filtersCopy = filtersCopy.filter(function(flt) { return flt !== filters[i]; });  // remove filter\n                    } else if (or === true) {\n                        filtersCopy = filtersCopy.filter(function(flt) { return ![filters[i], filters[i-1], filters[i-2]].includes(flt); });  // remove OR combined filters\n                    }\n                    negateAllFilterFail = false;\n                }\n                else if (nestedSearch === \"fail\") { // Negating all-matching filter has not been matched\n                    return;\n                }\n                else if (nestedSearch === false) {\n                    if (or === true) { // Filter is OR combined\n                        if (negateAllFilterFail === true) { // Also previous filter failed\n                            break;\n                        }\n                        else if (negateAllFilterFail === false) {\n                            continue;\n                        }\n                    } else if (or === false) {\n                        try {\n                            if (filters[i+1].value === \"OR\") { // If next value is OR\n                                negateAllFilterFail = true; // Set negateAllFilterFail to true\n                                continue;\n                            }\n                        } catch (error) {\n                            break;\n                        }\n                    }\n                }\n                or = false;\n            }\n        }\n    }\n    if (filtersCopy.length === 0 && nested === false) {\n        return pluginDataBlock;\n    }\n    else if (filtersCopy.length === 0 && nested === true) {\n        return true;\n    }\n    else if (filtersCopy.length !== 0 && nested === true) {\n        return filtersCopy;\n        //return false;\n    }\n}","/*\nPlugins contains all the Windows plugins that will be shown to user in generic boxes. Each key in plugins is the plugin name, which is the same as its result field in DB.\nEach plugin object contains info-attribute, which data will be rendered to infoBox contained in plugin header.\ncolumns-attribute contains objects for each column names and styles that define the column width + update that tells which functions should be run to column data when it is retrieved from DB\n*/\n\nvar plugins = {\n    \"pslist\" : {\n        info : `pslist shows basic details of processes running in the system.\\n\n        - COMM: Name of the process running\\n\n        - PID: Process ID\\n\n        - PPID: Parent process ID`\n        ,\n        columns : [\n            {\"name\": \"COMM\", \"style\": {width: \"50%\"}},\n            {\"name\": \"PID\", \"style\": {width : \"25%\"}},\n            {\"name\": \"PPID\", \"style\": {width : \"25%\"}}\n        ]\n    },\n\n    \"elfs\" : {\n        info : `elfs lists all memory mapped ELF files for all processes.\\n\n        - Process: Process name\\n\n        - PID: Process ID\\n\n        - File Path: Path to file or object\\n\n        -- [vdso]: small shared library that the kernel automatically maps into the address space of all user-space applications\n        - Start: Starting virtual address in the process memory\\n\n        - End: Ending virtual address in the process memory\\n`\n        ,\n        columns : [\n            {\"name\": \"Process\", \"style\": {width : \"22.5%\"}},\n            {\"name\": \"PID\", \"style\": {width : \"10%\"}},\n            {\"name\": \"File Path\", \"style\": {width : \"22.5%\"}},\n            {\"name\": \"Start\", \"style\": {width : \"22.5%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"End\", \"style\": {width : \"22.5%\"}, \"update\" : \"to64BitHex\"}\n        ]\n    },\n\n    \"check_modules\" : {\n        info : `check_modules compares module list to sysfs info, if available.\\n\n        - Module Name: Name of the module\\n\n        - Module Address: Memory address of the module\\n`\n        ,\n        columns : [\n            {\"name\": \"Module Name\", \"style\": {width : \"50%\"}},\n            {\"name\": \"Module Address\", \"style\": {width : \"50%\"}, \"update\" : \"to64BitHex\"}\n        ]\n    },\n\n    \"check_creds\" : {\n        info : `check_creds checks if any processes are sharing credential structures.\\n\n        - PIDs: Process IDs of the processes sharing \"cred\" structures\\n`\n        ,\n        columns : [\n            {\"name\": \"PIDs\", \"style\": {width : \"100%\"}}\n        ]\n    },\n\n    \"lsmod\" : {\n        info : `lsmod lists loaded kernel modules.\\n\n        - Offset: Module location in memory\\n\n        - Name: Name of the module\\n\n        - Size: Module size in memory`\n        ,\n        columns : [\n            {\"name\": \"Offset\", \"style\": {width : \"40%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"Name\", \"style\": {width : \"40%\"}},\n            {\"name\": \"Size\", \"style\": {width : \"20%\"}, \"update\" : \"bytesToSize\"}\n        ]\n    },\n\n    \"lsof\" : {\n        info : `lsof lists all memory maps for all processes.\\n\n        - Process: Process name\\n\n        - PID: Process ID\\n\n        - FD: File descriptor\\n\n        - Path: Path to the file descriptor`\n        ,\n        columns : [\n            {\"name\": \"Process\", \"style\": {width : \"35%\"}},\n            {\"name\": \"PID\", \"style\": {width : \"15%\"}},\n            {\"name\": \"FD\", \"style\": {width : \"15%\"}},\n            {\"name\": \"Path\", \"style\": {width : \"35%\"}}\n        ]\n    },\n\n    \"keyboard_notifiers\" : {\n        info : `Parses the keyboard notifier call chain. Plugin walks the kernel \"keyboard_notifier_list\" and checks if each notifier (callback) is within the kernel.\\n\n        - Address: Handlers memory address\\n\n        - Module: Name of the module hooking\\n\n        - Symbol: Name of the symbol\\n`\n        ,\n        columns : [\n            {\"name\": \"Address\", \"style\": {width : \"33.3%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"Module\", \"style\": {width : \"33.3%\"}},\n            {\"name\": \"Symbol\", \"style\": {width : \"33.3%\"}}\n        ]\n    },\n\n    \"check_idt\" : {\n        info : `check_idt checks if the Linux interrupt-descriptor table has been altered.\\n\n        - Index: Index number\\n\n        - Address: Module address in memory\\n\n        - Module: Module name\\n\n        - Symbol: Name of the symbol`\n        ,\n        columns : [\n            {\"name\": \"Index\", \"style\": {width : \"15%\"}},\n            {\"name\": \"Address\", \"style\": {width : \"35%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"Module\", \"style\": {width : \"15%\"}},\n            {\"name\": \"Symbol\", \"style\": {width : \"35%\"}}\n        ]\n    },\n\n    \"tty_check\" : {\n        info : `Checks tty devices for hooks. It works by checking the receive_buf function pointer for every active tty driver on the system.\\n\n        - Name: TTY device name\\n\n        - Address: Handlers memory address\\n\n        - Module: Name of the hooking module\\n\n        - Symbol: Name of the symbol\\n`\n        ,\n        columns : [\n            {\"name\": \"Name\", \"style\": {width : \"10%\"}},\n            {\"name\": \"Address\", \"style\": {width : \"30%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"Module\", \"style\": {width : \"30%\"}},\n            {\"name\": \"Symbol\", \"style\": {width : \"30%\"}}\n        ]\n    },\n\n    \"check_syscall\" : {\n        info : `check_syscall checks system call table for hooks.\\n\n        - Table Name: Name of the syscall table\\n\n        - Table Address: Memory address of the syscall table\\n\n        - Index: Index number\\n\n        - Handler Symbol: Handlers symbol name\\n\n        - Handler Address: Memory address of the handler`\n        ,\n        columns : [\n            {\"name\": \"Table Name\", \"style\": {width : \"10%\"}},\n            {\"name\": \"Table Address\", \"style\": {width : \"26.5%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"Index\", \"style\": {width : \"10%\"}},\n            {\"name\": \"Handler Symbol\", \"style\": {width : \"26.5%\"}},\n            {\"name\": \"Handler Address\", \"style\": {width : \"26.5%\"}, \"update\" : \"to64BitHex\"}\n        ]\n    },\n\n    \"check_afinfo\" : {\n        info : `Verifies the operation function pointers of network protocols. Plugin walks the file_operations and sequence_operations structures of all UDP and TCP protocol structures including, tcp6_seq_afinfo, tcp4_seq_afinfo, udplite6_seq_afinfo, udp6_seq_afinfo, udplite4_seq_afinfo, and udp4_seq_afinfo, and verifies each member.\\n\n        - Symbol Name: Name of the structure (e.g. udplite6_seq_afinfo)\\n\n        - Member: Member name (e.g. show)\\n\n        - Handler Address: Handlers memory address\\n`\n        ,\n        columns : [\n            {\"name\": \"Symbol Name\", \"style\": {width : \"33.3%\"}},\n            {\"name\": \"Member\", \"style\": {width : \"33.3%\"}},\n            {\"name\": \"Handler Address\", \"style\": {width : \"33.3%\"}, \"update\" : \"to64BitHex\"}\n        ]\n    },\n\n    \"maps\" : {\n        info : `maps lists all memory maps for all processes, which includes heaps, stacks, and shared libraries.\\n\n        - Process: Process name\\n\n        - PID: Process ID\\n\n        - File Path: Path to file or object\\n\n        -- Anonymous Mapping: Memory not relating to any named object or file within the file system is reported as this.\n        - Start: Starting virtual address in the process memory\\n\n        - End: Ending virtual address in the process memory\\n\n        - Flags: flags (rwx) describe what kind of access is permitted to this memory area.\\n\n        -- r: memory block is readable.\\n\n        -- w: memory block is writable.\\n\n        -- x: memory block is executable.\\n\n        - Inode: Inode number\\n\n        - Major/Minor: Each device file has a major ID number and a minor ID number.\n        -- Major: Major ID identifies the general class of device, and is used by the kernel to look up the appropriate driver for this type of device.\\n\n        -- Minor: Minor ID uniquely identifies a particular device within a general class. \\n\n        - PgOff: Offset into the file that the region maps.`\n        ,\n        columns : [\n            {\"name\": \"Process\", \"style\": {width : \"15%\"}},\n            {\"name\": \"PID\", \"style\": {width : \"5%\"}},\n            {\"name\": \"File Path\", \"style\": {width : \"15%\"}},\n            {\"name\": \"Start\", \"style\": {width : \"15%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"End\", \"style\": {width : \"15%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"Flags\", \"style\": {width : \"5%\"}},\n            {\"name\": \"Inode\", \"style\": {width : \"15%\"}},\n            {\"name\": \"Major\", \"style\": {width : \"5%\"}},\n            {\"name\": \"Minor\", \"style\": {width : \"5%\"}},\n            {\"name\": \"PgOff\", \"style\": {width : \"5%\"}}\n        ]\n    },\n\n    \"malfind\" : {\n        info : `malfind lists process memory ranges that potentially contain injected code. It looks for mappings with certain protection bits and displays the matching mappings.\\n\n        - Process: Process name\\n\n        - PID: Process ID\\n\n        - Start: Starting virtual address in the process memory\\n\n        - End: Ending virtual address in the process memory\\n\n        - Protection: flags (rwx) describe what kind of access is permitted to this memory area.\\n\n        -- r: memory block is readable.\\n\n        -- w: memory block is writable.\\n\n        -- x: memory block is executable.\\n \\n\n        - Hexdump: Preview hexdump from the memory\\n\n        - Disasm: Preview disassembled if possible\\n`\n        ,\n        columns : [\n            {\"name\": \"Process\", \"style\": {width : \"15.6%\"}},\n            {\"name\": \"PID\", \"style\": {width : \"6%\"}},\n            {\"name\": \"Start\", \"style\": {width : \"15.6%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"End\", \"style\": {width : \"15.6%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"Protection\", \"style\": {width : \"6%\"}},\n            {\"name\": \"Hexdump\", \"style\": {width : \"20.6%\"}},\n            {\"name\": \"Disasm\", \"style\": {width : \"20.6%\"}}\n        ]\n    }\n}\n\n\nexport { plugins };","import React from \"react\";\nimport { search, setSearch, filterSearch, processFilters} from \"../../Search\";\nimport {pluginInfo, checkIfSelected, buildBasicPluginBox, infoBox,\n    pluginBoxHeader, pluginDataColumns, pluginContainerFooter,\n    changePage, visibleDataBlocks, displayOrder, showAll, showLess, \n    buildJSONDownloadIcon, pluginDataBlocksFill} from \"../../../app/Utils.js\";\nimport \"../Common.css\";\nimport \"./LinuxDetails.css\";\n\nclass LinuxPlugin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dumpData: {}, // Object containing all plugin data from DB\n            search: \"\", // Search filters\n            pages : null, // Plugin page details\n            pagesCopy : null, // Copy of page details\n        };\n\n        this.buildPlugin = this.buildPlugin.bind(this);\n        this.buildBasicPluginBox = buildBasicPluginBox.bind(this);\n        // Plugin box related functions\n        this.pluginBoxHeader = pluginBoxHeader.bind(this); \n        this.pluginDataColumns = pluginDataColumns.bind(this);\n        this.pluginContainerFooter = pluginContainerFooter.bind(this);\n        this.pluginDataBlocksFill = pluginDataBlocksFill.bind(this);\n        this.pluginInfo = pluginInfo.bind(this);\n        this.buildJSONDownloadIcon = buildJSONDownloadIcon.bind(this);\n        this.infoBox = infoBox.bind(this);\n        // Category related functions\n        this.checkIfSelected = checkIfSelected.bind(this);\n        // Search functions\n        this.filterSearch = filterSearch.bind(this);\n        this.search = search.bind(this);\n        this.processFilters = processFilters.bind(this);\n        this.setSearch = setSearch.bind(this);\n        // Page displaying functions\n        this.changePage = changePage.bind(this);\n        this.visibleDataBlocks = visibleDataBlocks.bind(this);\n        this.displayOrder = displayOrder.bind(this);\n        this.showLess = showLess.bind(this);\n        this.showAll = showAll.bind(this);\n    }\n    \n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (prevState.pages == null) { // Plugin is rendered first time - fill all states with corresponding props\n            return {\n                pages: nextProps.pages,\n                pagesCopy: nextProps.pages,\n                dumpData: nextProps.dumpData,\n                selectedPlugins: nextProps.selectedPlugins,\n                search: nextProps.search\n            };\n        } else if (nextProps.pages !== prevState.pagesCopy) { // If all plugins data row visibility amount is changed\n            return {\n                pages: nextProps.pages,\n                pagesCopy: nextProps.pages,\n                selectedPlugins: nextProps.selectedPlugins,\n                dumpData: nextProps.dumpData\n            };\n        } else if ((prevState.dumpData.length === nextProps.dumpData.length && prevState.dumpData !== nextProps.dumpData) || (nextProps.search == prevState.search && nextProps.pages === prevState.pagesCopy) || (nextProps.search != prevState.search && nextProps.search === \"\")) { // Checks to make column order display work\n            return {\n                pages: prevState.pages,\n                selectedPlugins: nextProps.selectedPlugins,\n                dumpData: prevState.dumpData\n            }\n        }\n        else { // This plugin's data rows visibility amount is changed\n            return {\n                pages: prevState.pages,\n                selectedPlugins: nextProps.selectedPlugins,\n                dumpData: nextProps.dumpData\n            };\n        }\n    }\n\n    // Build basic box for plugin data\n    buildPlugin () {\n        return this.buildBasicPluginBox(this.props.pluginName, this.props.columns, this.props.info);\n    }\n\n    render() {\n        // Build container for the plugin\n        var pluginBox = this.buildPlugin(this)\n\n        // If no data is returned from buildPlugin, return null\n        if (pluginBox == null) {\n            return (null);\n        }\n        else { // Render plugin\n            return(\n                <div id=\"outer-plugin-box\" className={this.props.pluginName}>\n                    {pluginBox}\n                </div>\n            )\n        }\n    }\n}\n\nexport default LinuxPlugin;","const reportsSearchUsage = `<h2>Search how-to</h2>\n<p>Search can be used to filter visible reports by supplying strings that contain letters equivalent to report column values.\nSearch works with logical AND, so all whitespaces between words equal logical AND operator.</p>\n<p>Reports can also be filtered by data outputted by Volatility plugins. There are 3 keywords for this: </p>\n<ul>\n    <li><span style=\"color:green\">WINDOWS</span> - filter Windows reports</li>\n    <li><span style=\"color:green\">LINUX</span> - filter Linux reports</li>\n    <li><span style=\"color:green\">GLOBAL</span> - filter both Linux and Windows reports</li>\n</ul>\n<p>Keyword must be the first word in the search. Search words after the keyword follow same principal as when analysing dump.</p>\n<p>Analysis search is more advanced and contains several features listed below.</p>\n<h3>Operators</h3>\n<p>Search strings are combined with logical AND (Whitespace) by default, but can also be combined with logical OR by writing OR between the strings.</p>\n<ol>\n    <li><span style=\"color:green\">WINDOWS PID:\"620\" OR PID:\"800\"</span> - Show Windows dump report if it contains column PID with either value 620 OR 800</li>\n    <li><span style=\"color:green\">WINDOWS PID:\"620\" Value:\"AMD64\"</span> - Show Windows dump report if it contains data row that has column PID with value 620 AND another column Value with value AMD64. (<b>NOTE</b>: Value is column name like Process, PID, Modules, Offset etc. and has nothing to do with search syntax)</li>\n</ol>\n<h3>Regex</h3>\n<p>Quotation mark and free search use regex, so it is important to know special regex characters which are <b>. + * ? ^ $ ( ) [ ] { } | \\\\</b> . If any these marks are part of the value you are searching, you should comment the mark out using <b>\\\\</b>, which is one of the special characters, so the same policy applies to it as well.</p>\n<ol>\n    <li><span style=\"color:green\">WINDOWS Path:\"C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\kernel32\\\\.dll\"</span> - Show Windows dump reports that have column Path that contains value C:\\\\Windows\\\\System32\\\\kernel32.dll. <b>NOTE:</b> Commenting dot is usually not needed since it applies to any character except newline in regex syntax.</li>\n    <li><span style=\"color:green\">LINUX \"File Path\":\"\\\\[vdso\\\\]\"</span> - Show Linux dump reports that contain column File Path with value [vdso].</li>\n</ol>\n<h3>Quotation marks</h3>\n<p>Strings that are surrounded by quotation marks are compared to values in each column in each plugin. This search uses regex, so all regex marks should be commented. Quotation marks that are part of the value should also be commented using \\\\, so the value can be parsed correctly.</p>\n<ol>\n    <li><span style=\"color:green\">LINUX \"/dev/*\"</span> - Show Linux dump report if any column contains value that starts with /dev/</li>\n    <li><span style=\"color:green\">WINDOWS Variable:\"EXAMPLE\" Value:\"\\\\[\\\\\\\"text\\\\\\\"\\\\]\"</span> - Show Windows dump report if it contains data row that has column Variable with value EXAMPLE AND column Value with value [\"text\"].</li>\n</ol>\n<h3>Free search</h3>\n<p>Strings that are not surrounded by quotation marks are parsed mostly the sameway as strings surrounded by quotation marks.</p>\n<p>Difference is that non-quotation marked strings are separated by whitespaces, so values can't contain any whitespaces and non-quotation marked strings target all columns, so they cannot be used to target single column name by using column name as prefix (e.g. <span style=\"color:green\">WINDOWS PID:1000</span> would search all Windows reports columns for value PID:1000).</sp>\n<ol>\n    <li><span style=\"color:green\">WINDOWS *\\\\.ps1</span> - Show Windows dump report if any column contains value that ends with .ps1.</li>\n    <li><span style=\"color:green\">GLOBAL VBoxClient*</span> - Show Windows and Linux reports that contain any column with value starting with VBoxClient.</li>\n</ol>\n<h3>Ranges</h3>\n<p>Range filters can be used to search <b>numerical</b> data within certain range. Range needs to always have a prefix containing column name which is targeted. Range syntax is: <span style=\"color:green\">column:(startvalue-endvalue)</span>. No whitespaces inside brackets are allowed.</p>\n<ol>\n    <li><span style=\"color:green\">GLOBAL Offset:(0x0000850000036750-0x00008F03C0E483B0)</span> - Show Windows and Linux reports that contain column Offset which has value between 0x0000850000036750 and 0x00008F03C0E483B0.</li>\n    <li><span style=\"color:green\">LINUX PID:(50-1000)</span> - Show Linux reports that contain column PID which has value between 50 and 1000.</li>\n</ol>\n<h3>Column names</h3>\n<p> Column names before the actual value tell which column is being targeted. Currently there is no way to specify an individual plugin with certain value. e.g. if search is: <span style=\"color:green\">PID:\"500\"</span>, all plugins with column PID are targeted. If column name contains whitespaces, it can be surrounded by quotation marks. Column name can not be specified when using free search.</p>\n<ol>\n    <li><span style=\"color:green\">WINDOWS \"Last Write Time\":\"2019-09-18*\"</span> - Show Windows reports that contain column Last Write Time with value starting with 2019-09-18</li>\n</ol>\n<h3>Negating search</h3>\n<p>Negating search can be used to remove out some results from search. It works the opposite way as regular search. Other than nested and free search can be turned into negating search by adding - front of the search string. <b>NOTE:</b> Currently this is more useful feature in the analysis search and not very practical in this one.</p>\n<ol>\n    <li><span style=\"color:green\">GLOBAL -Offset:(0x0000850000036750-0x00008F03C0E483B0)</span> - Show Windows and Linux reports that do not contain ANY columns with Offset which has value between 0x0000850000036750 and 0x00008F03C0E483B0. This maybe works for one plugin with Offset column, but some other plugins do not have Offset column, so the report is shown.</li>\n    <li><span style=\"color:green\">LINUX -\"*a*\" OR -\"*0*\"</span> - Show Linux reports if it does not contain any a or 0 characters under any column</li>\n</ol>\n<h3>Nested search</h3>\n<p>Nested searches can be used to do more complex searches. In nested search, search strings are put inside brackets turning them into a group. If range search is used inside nested search, closing bracket ) at the end of the search has to be commented out. Currently nested search doesn't support negating searches and other nests inside nest.</p>\n<p><b>NOTE:</b> nested searches can be very heavy to browser if several of them occur in same search string!</p>\n<ol>\n    <li><span style=\"color:green\">WINDOWS (Process:\"smss.exe\" Variable:\"*SystemDrive*\") OR (Module:\"Wd*\" -Type:\"KeBugCheckReasonCallbackListHead\")</span> - Show Windows reports that contain (column Process with value smss.exe AND column Variable containing SystemDrive somewhere within value) OR (column Module which has value starting with Wd*, but that row does not have column Type with value KeBugCheckReasonCallbackListHead).</li>\n    <li><span style=\"color:green\">WINDOWS Process:\"lsass.exe\" (Base:(140702881546240-140709896912896\\\\) OR Variable:\"*\")</span> - Show Windows reports that contain column Process with value lsass.exe AND (column base with value between 140702881546240 and 140709896912896 OR column Variable with any value)</li>\n</ol>\n<h3>Known issues:</h3>\n<ul>\n    <li>When using Offsets, Addresses and other hexadecimal values in this search, you likely need to turn the hexadecimal value into decimal. e.g. Hex 0x0000D98D0AA0E000 converts into decimal number 239199791931392.</li>\n    <li>Size column can not be currently used in this search.</li>\n    <li>Reports Type and Windows reports OS columns can not be currently used in this search.</li>\n</ul>\n`;\n\nconst reportsUsage = `\n<h2>Reports table</h2>\n<p>Each uploaded dump is displayed in this table, which has columns where you can e.g. insert data helping to identify dumps from each other.</p>\n<p>You can start to analyse dump by pressing  <img style=\"max-width: 1em\" src=\"images/analyze.png\" />  icon.</p>\n<p>You can open up plugin selection by pressing  <img style=\"max-width: 1em\" src=\"images/select-plugins.png\" />  icon next to dump. From there you can select which plugins should be run on the dump. Results of the plugins will appear to analysis page. basicdetails is run by default when dump is uploaded and info when Windows dump uploaded.</p>\n<p>When pressing <img style=\"max-width: 1em\" src=\"images/edit.png\" /> icon, a box will open where you can do modifications to the report by changing name, updating description, adding tags and removing tags related to the dump.</p>\n<p>You can remove dump and all its data from DB by pressing  <img style=\"max-width: 1em\" src=\"images/delete.png\" /> icon.</p>\n`;\n\nconst pageHeaderUsage = `\n<h2>Search how-to</h2>\n<h3>Operators</h3>\n<p>Search strings are combined with logical AND (Whitespace) by default, but can also be combined with logical OR by writing OR between the strings.</p>\n<ol>\n    <li><span style=\"color:green\">PID:\"620\" OR PID:\"800\"</span> - Show plugin data block if it contains column PID with either value 620 OR 800</li>\n    <li><span style=\"color:green\">PID:\"620\" Value:\"AMD64\"</span> - Show plugin data block if it contains data row that has column PID with value 620 AND another column Value with value AMD64. (<b>NOTE</b>: Value is column name like Process, PID, Modules, Offset etc. and has nothing to do with search syntax)</li>\n</ol>\n<h3>Regex</h3>\n<p>Quotation mark and free search use regex, so it is important to know special regex characters which are <b>. + * ? ^ $ ( ) [ ] { } | \\\\</b> . If any these marks are part of the value you are searching, you should comment the mark out using <b>\\\\</b>, which is one of the special characters, so the same policy applies to it as well.</p>\n<ol>\n    <li><span style=\"color:green\">Path:\"C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\kernel32\\\\.dll\"</span> - Show plugin data blocks that have column Path that contains value C:\\\\Windows\\\\System32\\\\kernel32.dll. <b>NOTE:</b> Commenting dot is usually not needed since it applies to any character except newline in regex syntax.</li>\n    <li><span style=\"color:green\">\"File Path\":\"\\\\[vdso\\\\]\"</span> - Show plugin data blocks that contain column File Path with value [vdso].</li>\n</ol>\n<h3>Quotation marks</h3>\n<p>Strings that are surrounded by quotation marks are compared to values in each column in each plugin. This search uses regex, so all regex marks should be commented. Quotation marks that are part of the value should also be commented using \\\\, so the value can be parsed correctly.</p>\n<ol>\n    <li><span style=\"color:green\">\"/dev/*\"</span> - Show plugin data blocks if any column contains value that starts with /dev/</li>\n    <li><span style=\"color:green\">Variable:\"EXAMPLE\" Value:\"\\\\[\\\\\\\"text\\\\\\\"\\\\]\"</span> - Show plugin data block if it contains data row that has column Variable with value EXAMPLE AND column Value with value [\"text\"].</li>\n</ol>\n<h3>Free search</h3>\n<p>Strings that are not surrounded by quotation marks are parsed mostly the sameway as strings surrounded by quotation marks.</p>\n<p>Difference is that non-quotation marked strings are separated by whitespaces, so values can't contain any whitespaces and non-quotation marked strings target all columns, so they cannot be used to target single column name by using column name as prefix (e.g. <span style=\"color:green\">PID:1000</span> would search all columns for value PID:1000).</sp>\n<ol>\n    <li><span style=\"color:green\">*\\\\.ps1</span> - Show plugin data block if any column contains value that ends with .ps1.</li>\n    <li><span style=\"color:green\">VBoxClient*</span> - Show plugin data block that contains any column with value starting with VBoxClient.</li>\n</ol>\n<h3>Ranges</h3>\n<p>Range filters can be used to search <b>numerical</b> data within certain range. Range needs to always have a prefix containing column name which is targeted. Range syntax is: <span style=\"color:green\">column:(startvalue-endvalue)</span>. No whitespaces inside brackets are allowed.</p>\n<ol>\n    <li><span style=\"color:green\">Offset:(0x0000850000036750-0x00008F03C0E483B0)</span> - Show plugin data blocks that contain column Offset which has value between 0x0000850000036750 and 0x00008F03C0E483B0.</li>\n    <li><span style=\"color:green\">PID:(50-1000)</span> - Show plugin data blocks that contain column PID which has value between 50 and 1000.</li>\n</ol>\n<h3>Column names</h3>\n<p> Column names before the actual value tell which column is being targeted. Currently there is no way to specify an individual plugin with certain value. e.g. if search is: <span style=\"color:green\">PID:\"500\"</span>, all plugins with column PID are targeted. If column name contains whitespaces, it can be surrounded by quotation marks. Column name can not be specified when using free search.</p>\n<ol>\n    <li><span style=\"color:green\">\"Last Write Time\":\"2019-09-18*\"</span> - Show plugin data blocks that contain column Last Write Time with value starting with 2019-09-18</li>\n</ol>\n<h3>Negating search</h3>\n<p>Negating search can be used to remove out some results from search. It works the opposite way as regular search. Other than nested and free search can be turned into negating search by adding - front of the search string.</p>\n<ol>\n    <li><span style=\"color:green\">-Offset:(0x0000850000036750-0x00008F03C0E483B0)</span> - Show plugin data blocks that do not contain ANY columns with Offset which has value between 0x0000850000036750 and 0x00008F03C0E483B0. This maybe works for one plugin with Offset column, but some other plugins do not have Offset column, so all those plugins data blocks are shown.</li>\n    <li><span style=\"color:green\">-\"*a*\" OR -\"*0*\"</span> - Show plugin data block if it does not contain any a or 0 characters under any column</li>\n</ol>\n<h3>Nested search</h3>\n<p>Nested searches can be used to do more complex searches. In nested search, search strings are put inside brackets turning them into a group. If range search is used inside nested search, closing bracket ) at the end of the search has to be commented out. Currently nested search doesn't support negating searches and other nests inside nest.</p>\n<p><b>NOTE:</b> nested searches can be very heavy to browser if several of them occur in same search string!</p>\n<ol>\n    <li><span style=\"color:green\">(Process:\"smss.exe\" Variable:\"*SystemDrive*\") OR (Module:\"Wd*\" -Type:\"KeBugCheckReasonCallbackListHead\")</span> - Show plugin data blocks that contain (column Process with value smss.exe AND column Variable containing SystemDrive somewhere within value) OR (column Module which has value starting with Wd*, but that row does not have column Type with value KeBugCheckReasonCallbackListHead).</li>\n    <li><span style=\"color:green\">Process:\"lsass.exe\" (Base:(0x00007FF7F1460000-0x00007FF993D40000\\\\) OR Variable:\"*\")</span> - Show plugin data blocks that contain column Process with value lsass.exe AND (column Base with value between 0x00007FF7F1460000 and 0x00007FF993D40000 OR column Variable with any value)</li>\n</ol>\n<h2>Data blocks</h2>\n<p>Data blocks menu lets user select how many rows of data are displayed in each plugin. Most of the plugins also have their own individual setting for this.</p>\n<h2>Plugin selection and categories</h2>\n<p>By default, all plugin results are displayed to user when she opens some dump's analysis page. Any plugin's results can be filtered out by deselecting them from menu that contains all plugin names. Plugins can be reselected from the same menu if their results are needed at some point again.</p>\n<p>There is also plugin category menu, which lets user select the category of plugins resulting in showing plugins only in that particular category.</p>\n<h2>JSON download</h2>\n<p>Plugin output can be downloaded as JSON by clicking <img id=\"info-box-image\" src=\"images/json-download.svg\" />-icon in plugin header. <b>NOTE:</b> Your browser may not be able to download all of the JSON data if it takes too much space.</p>\n`;\n\nconst pluginSelectImages = `\n<div id=\"plugin-image-meaning\">\n    <h2>Meanings of different icons</h2>\n    <p><img id=\"plugin-usage-image\" src=\"images/plugin-loading.gif\" /> Plugin results are still being fetched from database. </p>\n    <p><img id=\"plugin-usage-image\" src=\"images/plugin-not-found.png\" /> Plugin results were not found from database, likely due to plugin not being run yet. </p>\n    <p><img id=\"plugin-usage-image\" src=\"images/plugin-ok.png\" /> Plugin ran successfully and gave output.</p>\n    <p><img id=\"plugin-usage-image\" src=\"images/plugin-empty.png\" /> Plugin ran successfully, but gave no output.</p>\n    <p><img id=\"plugin-usage-image\" src=\"images/plugin-error.png\" /> Error occurred when running plugin.</p>\n    <p><img id=\"plugin-usage-image\" src=\"images/plugin-unsatisfied.png\" /> Plugin requirements are unsatisfied. Proper ISF is missing.</p>\n</div>\n`;\n\nexport {reportsSearchUsage, reportsUsage, pageHeaderUsage, pluginSelectImages};","import $ from \"jquery\";\nimport React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport Select from 'react-select';\nimport { searchBar, search, setSearch, filterSearch, processFilters} from \"../../Search\";\nimport {pageHeader, pluginInfo, checkIfSelected, buildBasicPluginBox, infoBox, DOMParserInfoBox,\n    pluginBoxHeader, pluginDataColumns, pluginContainerFooter, buildHeaderBlocksMenu, \n    to64BitHex, toHex, bytesToSize, changePage, visibleDataBlocks, allVisibleDataBlocks, displayOrder, showAll, showLess, buildJSONDownloadIcon, pluginDataBlocksFill} from \"../../../app/Utils.js\";\nimport { plugins } from \"./Plugins\";\nimport LinuxPlugin from \"./LinuxPlugin\";\nimport {pageHeaderUsage} from \"../../Usage.js\";\nimport \"../../Reports.css\";\nimport \"../Common.css\"\nimport \"./LinuxDetails.css\";\nimport \"../../Reports\";\n\n// Contains all plugins that are available to user\nconst pluginNames = [\n    { value: 'basicdetails', label: 'basicdetails' },\n    { value: 'check_afinfo', label: 'check_afinfo' },\n    { value: 'check_creds', label: 'check_creds' },\n    { value: 'check_idt', label: 'check_idt' },\n    { value: 'check_modules', label: 'check_modules' },\n    { value: 'check_syscall', label: 'check_syscall' },\n    { value: 'elfs', label: 'elfs' },\n    { value: 'keyboard_notifiers', label: 'keyboard_notifiers' },\n    { value: 'lsmod', label: 'lsmod' },\n    { value: 'lsof', label: 'lsof' },\n    { value: 'malfind', label: 'malfind' },\n    { value: 'maps', label: 'maps' },\n    { value: 'pslist', label: 'pslist' },\n    { value: 'tty_check', label: 'tty_check' },\n];\n\nconst selectStyles = {\n    container: base => ({ \n        ...base, \n        width: 300,\n        \"@media screen and (max-width: 1700px)\": {\n            ...base[\"@media only screen and (max-width: 1700px)\"],\n            width: 200,\n            \"marginLeft\": 10,\n        },\n    }),\n    control: (base, state) => ({\n        ...base,\n        width: 300,\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        \"maxHeight\": state.menuIsOpen ? \"none\" : 30,\n        \"@media screen and (max-width: 1700px)\": {\n        ...base[\"@media only screen and (max-width: 1700px)\"],\n        width: 200\n        },\n      }),\n    indicatorsContainer: (base, state) => ({\n        ...base,\n        \"maxHeight\": state.menuIsOpen ? \"none\" : 40,\n    }),\n    menu: base => ({ \n        ...base, \n        width: 300,\n        \"@media screen and (max-width: 1700px)\": {\n            ...base[\"@media only screen and (max-width: 1700px)\"],\n            width: 200\n        },\n    }),\n}\n\nclass LinuxDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dumpData: {}, // Object containing all dump data from DB like plugin results, system name etc.\n            search: \"\", // Search filters\n            pageDetails : { pages : {} }, // Plugin page details\n            selectedPlugins: pluginNames, // Currently selected plugins (These are visible to user)\n            pluginCategory: \"all\" // Plugin category\n        };\n        // Main function\n        this.buildPage = this.buildPage.bind(this);\n        // Page header functions\n        this.pageHeader = pageHeader.bind(this);\n        this.buildHeaderBlocksMenu = buildHeaderBlocksMenu.bind(this);\n        this.buildPluginCheckBox = this.buildPluginCheckBox.bind(this);\n        this.buildPluginCategoryMenu = this.buildPluginCategoryMenu.bind(this);\n        // Functions for rendering plugin data \n        this.basicLinuxDetails = this.basicLinuxDetails.bind(this);\n        this.buildBasicPluginBox = buildBasicPluginBox.bind(this);\n        // Plugin box related functions\n        this.pluginBoxHeader = pluginBoxHeader.bind(this); \n        this.pluginDataColumns = pluginDataColumns.bind(this);\n        this.pluginContainerFooter = pluginContainerFooter.bind(this);\n        this.pluginDataBlocksFill = pluginDataBlocksFill.bind(this);\n        this.pluginInfo = pluginInfo.bind(this);\n        this.infoBox = infoBox.bind(this);\n        this.buildJSONDownloadIcon = buildJSONDownloadIcon.bind(this);\n        this.DOMParserInfoBox = DOMParserInfoBox.bind(this);\n        // Category related functions\n        this.checkIfSelected = checkIfSelected.bind(this);\n        this.pickSelectedPlugins = this.pickSelectedPlugins.bind(this);\n        // Search functions\n        this.filterSearch = filterSearch.bind(this);\n        this.searchBar = searchBar.bind(this);\n        this.search = search.bind(this);\n        this.processFilters = processFilters.bind(this);\n        this.setSearch = setSearch.bind(this);\n        // Data modification functions\n        this.to64BitHex = to64BitHex.bind(this);\n        this.bytesToSize = bytesToSize.bind(this);\n        this.toHex = toHex.bind(this);\n        // Page displaying functions\n        this.changePage = changePage.bind(this);\n        this.displayOrder = displayOrder.bind(this);\n        this.showLess = showLess.bind(this);\n        this.showAll = showAll.bind(this);\n        this.visibleDataBlocks = visibleDataBlocks.bind(this);\n        this.allVisibleDataBlocks = allVisibleDataBlocks.bind(this);\n    }\n\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n\n        // Ignore these keys when populating this.state.pagedetails\n        const ignore = [ \"_id\", \"os_info\", \"info\", \"currenttime\", \"analyse_state\"] \n\n        // When dump plugin data is rendered the first time\n        if (Object.keys(prevState.pageDetails.pages).length === 0) {\n            let pages = { pages : {} };\n            for (const value in nextProps.dumpData) { // Populate this.state.pageDetails with default values\n                if (Array.isArray(nextProps.dumpData[value]) && !(value in ignore)) {\n                    pages.pages[value] = {pageNumber : 1, showAll : false, elementsVisible : 20};\n                }\n            }\n\n            // this.state.dumpData is copied\n            var dumpDataCopy = JSON.parse(JSON.stringify(nextProps.dumpData))\n\n            // Update plugin data if specified by \"update\" attribute in Plugins.js \n            for (var plugin in plugins) {\n                for (var column in plugins[plugin].columns) {\n                    if (\"update\" in plugins[plugin].columns[column]) {\n                        if (plugins[plugin].columns[column][\"update\"].includes(\"parseInt\")) { // To Integer\n                            for (var data in dumpDataCopy[plugin]) {\n                                try {\n                                    dumpDataCopy[plugin][data][plugins[plugin].columns[column][\"name\"]] = parseInt(dumpDataCopy[plugin][data][plugins[plugin].columns[column][\"name\"]])\n                                }\n                                catch(err){ // null values cannot be converted to string\n                                    continue;\n                                }\n                            }\n                        }\n                        else if (plugins[plugin].columns[column][\"update\"].includes(\"toString\")) { // To String\n                            for (var data in dumpDataCopy[plugin]) {\n                                try {\n                                    dumpDataCopy[plugin][data][plugins[plugin].columns[column][\"name\"]] = dumpDataCopy[plugin][data][plugins[plugin].columns[column][\"name\"]].toString()\n                                }\n                                catch(err){ // null values cannot be converted to string\n                                    continue;\n                                }\n                            }\n                        }\n                        if (plugins[plugin].columns[column][\"update\"].includes(\"to64BitHex\")) { // Integer to HEX\n                            for (var data in dumpDataCopy[plugin]) {\n                                try {\n                                    dumpDataCopy[plugin][data][plugins[plugin].columns[column][\"name\"]] = to64BitHex(dumpDataCopy[plugin][data][plugins[plugin].columns[column][\"name\"]])\n                                }\n                                catch(err) {\n                                    continue;\n                                }\n                            }\n                        }\n                        else if (plugins[plugin].columns[column][\"update\"].includes(\"bytesToSize\")) { // Bytes to size (KB, MB, GB etc.)\n                            for (var data in dumpDataCopy[plugin]) {\n                                try {\n                                    dumpDataCopy[plugin][data][plugins[plugin].columns[column][\"name\"]] = bytesToSize(dumpDataCopy[plugin][data][plugins[plugin].columns[column][\"name\"]])\n                                }\n                                catch(err) {\n                                    continue;\n                                }\n                            }\n                        }\n                        else if (plugins[plugin].columns[column][\"update\"].includes(\"toHex\")) { // To HEX\n                            for (var data in dumpDataCopy[plugin]) {\n                                try {\n                                    dumpDataCopy[plugin][data][plugins[plugin].columns[column][\"name\"]] = toHex(dumpDataCopy[plugin][data][plugins[plugin].columns[column][\"name\"]])\n                                }\n                                catch(err) {\n                                    continue;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            return {\n                pageDetails : pages,\n                dumpData: dumpDataCopy\n            };\n        }\n        else {\n            var pages = prevState.pageDetails;\n            return {\n                pageDetails : pages,\n                dumpData: prevState.dumpData\n            };\n        }\n    }\n\n    // Build react-select checkbox to header\n    buildPluginCheckBox () {\n        const { selectedPlugins } = this.state;\n        return <Select\n        autoFocus\n        isMulti\n        placeholder={\"Remove plugins\"}\n        className={\"plugin-select\"}\n        value={selectedPlugins}\n        onChange={this.handleChange}\n        options={pluginNames}\n        closeMenuOnSelect={false}\n        hideSelectedOptions={true}\n        allowSelectAll={true}\n        styles={selectStyles}\n        />;\n    }\n\n    // Main function called by render bringing all blocks together\n    buildPage () {\n        const items = [];\n        items.push(this.pageHeader(pageHeaderUsage))\n        items.push(this.basicLinuxDetails())\n        var ignore = [];\n        for (var plugin in plugins) { // Create generic plugin boxes for plugins in Plugins.js file\n\n            if (ignore.includes(plugin)) {\n                continue;\n            }\n\n            if (this.checkIfSelected(this.state.selectedPlugins, plugin) === false) { // Check if plugin is selected\n                continue;\n            }\n                    \n            let dumpData = this.search(this.state.dumpData[plugin]); // Do search for the plugin data\n\n            try { // Check that plugin passes search filters\n                if (dumpData.length === 0 || dumpData == null || dumpData === \"ERROR\" || dumpData === \"UNSATISFIED\") {\n                    continue;\n                }\n            } catch (error) {\n                continue;\n            }\n\n            items.push(<LinuxPlugin dumpData={dumpData} \n                    pages={this.state.pageDetails.pages[plugin]}\n                    selectedPlugins={this.state.selectedPlugins}\n                    pluginName={plugin}\n                    columns={plugins[plugin].columns}\n                    info={plugins[plugin].info}\n                    search={this.state.search}\n                    />)\n        }\n        return items;\n    }\n\n    // Picks plugins that will be rendered to user\n    pickSelectedPlugins(value) {\n        var categoryPlugins = []; // array populated with selected plugins\n\n        if (value === \"all\") { // Show all plugins\n            categoryPlugins = pluginNames;\n        } else if (value === \"processes\") { // Show process related plugins\n            categoryPlugins = [\n                { value: 'pslist', label: 'pslist' },\n                { value: 'lsof', label: 'lsof' },\n                { value: 'elfs', label: 'elfs' },\n                { value: 'check_creds', label: 'check_creds' },\n                { value: 'maps', label: 'maps' }\n            ];\n        } else if (value === \"kernel\") { // Show kernel related plugins\n            categoryPlugins = [\n                { value: 'check_afinfo', label: 'check_afinfo' },\n                { value: 'check_idt', label: 'check_idt' },\n                { value: 'check_syscall', label: 'check_syscall' },\n                { value: 'tty_check', label: 'tty_check' },\n                { value: 'keyboard_notifiers', label: 'keyboard_notifiers' }\n            ];\n        } else if (value === \"modules\") { // Show modules related plugins\n            categoryPlugins = [\n                { value: 'check_modules', label: 'check_modules' },\n                { value: 'lsmod', label: 'lsmod' }\n            ];\n        } else if (value === \"malware\") { // Show malware related plugins\n            categoryPlugins = [\n                { value: 'malfind', label: 'malfind' }\n            ];\n        }\n        this.handleChange(categoryPlugins);\n    }\n\n    // Update selectedPlugins-state\n    handleChange = selectedPlugins => {\n        this.setState({ selectedPlugins });\n        console.log(`Option selected:`, selectedPlugins);\n    };\n\n    // Builds plugin category menu inside the header\n    buildPluginCategoryMenu () {\n        const items = [];\n        items.push(\n            <select id=\"plugin-category-select\" onChange={(evt) => this.pickSelectedPlugins(evt.target.value)}>\n                <option disabled selected value >Plugin categories</option>\n                <option value=\"all\">All</option>\n                <option value=\"kernel\">Kernel</option>\n                <option value=\"processes\">Processes</option>\n                <option value=\"modules\">Modules</option>\n                <option value=\"files\">Files</option>\n            </select>\n        )\n        return items;\n    }\n\n    // Builds and returns structure containing general information about the dump which is being analysed\n    basicLinuxDetails () {\n\n        const items = [];\n        var name = \"basicdetails\"\n        var dumpData = this.state.dumpData\n        if (this.checkIfSelected(this.state.selectedPlugins, name) === false) {\n            return null;\n        }\n        var os_styles = {}\n        try { // If Linux OS info takes too much space its text is shrinked\n            var os_length = dumpData.os_info.length\n            if (os_length < 40)\n                os_styles = {\"font-size\" : \"25px\"};\n            if (os_length > 40 && os_length < 250)\n                os_styles = {\"font-size\" : \"18px\"};\n        }\n        catch (err) {}\n\n        var info = `This primary section of the report contains basic information about the dump.\\n\n        Under this section is search field and tables for each plugin used on the dump. These tables display data retrieved from the plugin.\\n\n        Each plugin section contains information button like this one. Pressing the button displays basic information related to the plugin and its columns.`;\n\n        items.push(\n            <div id=\"basic-details-container\" className=\"linux\">\n                <div id=\"header\">\n                    <img src=\"images/plugin-info.png\" id=\"info-button\" onClick={() => this.pluginInfo(name)} />\n                    {this.infoBox(name, info, \"Basic details\")}\n                    <div id=\"header-name\">Basic details</div>\n                </div>\n                <div id=\"details\">\n                    <ul id=\"detail-block\">\n                        <li id=\"detail-header\">Dump size</li>\n                        <li id=\"detail-data\">{dumpData.dumpsize == null ? \"-\" : this.bytesToSize(dumpData.dumpsize)}</li>\n                    </ul>\n                    <ul id=\"detail-block\">\n                        <li id=\"detail-header\">OS details</li>\n                        <li id=\"detail-data\" style={os_styles}>{dumpData.os_info == null ? \"-\" : dumpData.os_info}</li>\n                    </ul>\n                    <ul id=\"detail-block\">\n                        <li id=\"detail-header\">Processes</li>\n                        <li id=\"detail-data\">{Array.isArray(dumpData.pslist) === false ? \"-\" : dumpData.pslist.length}</li>\n                    </ul>\n                    <ul id=\"detail-block\" className=\"right-side\">\n                        <li id=\"detail-header\">Kernel modules</li>\n                        <li id=\"detail-data\">{Array.isArray(dumpData.lsmod) === false ? \"-\" : dumpData.lsmod.length}</li>\n                    </ul>\n                </div>\n            </div>\n        )\n        return items;\n    }\n\n    render() {\n\n        return(\n            <div id=\"linux-dump-page\">\n                {this.buildPage(this)}\n            </div>\n        )\n    }\n}\n\nexport default LinuxDetails;","/*\nPlugins contains all the Windows plugins that will be shown to user in generic boxes. Each key in plugins is the plugin name, which is the same as its result field in DB.\nEach plugin object contains info-attribute, which data will be rendered to infoBox contained in plugin header.\ncolumns-attribute contains objects for each column names and styles that define the column width + update that tells which functions should be run to column data when it is retrieved from DB\n*/\n\nvar plugins = {\n    \"netscan\" : { // Plugin name\n        // Data contained in infoBox which is found from each plugin\n        info : `netscan scans for network objects present in windows memory image.\\n\n        - PID: Process ID\\n\n        - Owner: Process owning the connection.\\n\n        - Offset: Connection offset\\n\n        - Proto: Connection protocol\\n\n        - LocalAddr: Local connection address\\n\n        - LocalPort: Local connection port\\n\n        - ForeignAddr: Foreign connection address\\n\n        - ForeignPort: Foreign connection port\\n\n        - State: Current state for TCP connections\\n\n        - Created: Connection establishment time\\n`\n        , // Column names and styles that define the column width + update that tells which functions should be run to column data when it is retrieved from DB\n        columns : [\n            {\"name\": \"PID\", \"style\" : {width: \"6%\"}},\n            {\"name\": \"Owner\", \"style\": {width: \"16%\"}},\n            {\"name\": \"Offset\", \"style\": {width: \"17%\"}, \"update\" : \"to64BitHex\"}, // Turn Offset values received from DB to 64 bit hexadecimal\n            {\"name\": \"Proto\", \"style\": {width: \"6%\"}},\n            {\"name\": \"LocalAddr\", \"style\": {width: \"8%\"}},\n            {\"name\": \"LocalPort\", \"style\": {width: \"8%\"}},\n            {\"name\": \"ForeignAddr\", \"style\": {width: \"10%\"}},\n            {\"name\": \"ForeignPort\", \"style\": {width: \"7%\"}},\n            {\"name\": \"State\", \"style\": {width: \"7%\"}},\n            {\"name\": \"Created\", \"style\": { \"border-right\": \"none !important\", width: \"15%\"}},\n        ]\n    },\n\n    \"dlllist\" : {\n        info : `dlllist displays process's loaded DLLs. It walks the doubly-linked list of _LDR_DATA_TABLE_ENTRY structures which is pointed to by the PEB's InLoadOrderModuleList.\\n\n        - PID: Process ID\\n\n        - Process: Process name\\n\n        - Name: DLL loaded by the process\\n\n        - Path: DLL path in file system\\n\n        - Base: DLL base address\\n\n        - Size: DLL size\\n\n        - LoadTime: Timestamp of process loading the DLL`\n        ,\n        columns : [\n            {\"name\": \"PID\", \"style\": {width: \"10%\"}},\n            {\"name\": \"Process\", \"style\": {width: \"16%\"}},\n            {\"name\": \"Name\", \"style\": {width: \"16%\"}},\n            {\"name\": \"Path\", \"style\": {width: \"16%\"}},\n            {\"name\": \"Base\", \"style\": {width: \"16%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"Size\", \"style\": {width: \"10%\"}, \"update\" : \"bytesToSize\"}, // Turn bytes received from DB to corresponding size (KB, MB etc.)\n            {\"name\": \"LoadTime\", \"style\": {width: \"16%\"}}\n        ]\n    },\n\n    \"psscan\" : {\n        info : `psscan scans for processes present in memory image.\\n\n        - ImageFileName: File which process was created from\\n\n        - PID: Process ID\\n\n        - PPID: Process parent ID\\n\n        - Offset: Process offset\\n\n        - Handles: Handles opened\\n\n        - Threads: Threads running in the process\\n\n        - SessionId: Session ID\\n\n        -- empty session ID will likely mean that process has started before smss.exe which is the session manager.\\n\n        - File output: File output\\n\n        - CreateTime: Time when process was created\\n\n        - ExitTime: Time when process ended if it has ended\\n\n        - Wow64: 32-bit applications on a 64–bit operating system`\n        ,\n        columns : [\n            {\"name\": \"ImageFileName\", \"style\": {width : \"10%\"}},\n            {\"name\": \"PID\", \"style\": {width : \"10%\"}},\n            {\"name\": \"PPID\", \"style\": {width : \"10%\"}},\n            {\"name\": \"Offset\", \"style\": {width : \"10%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"Handles\", \"style\": {width : \"10%\"}},\n            {\"name\": \"Threads\", \"style\": {width : \"10%\"}},\n            {\"name\": \"SessionId\", \"style\": {width : \"10%\"}},\n            {\"name\": \"CreateTime\", \"style\": {width : \"10%\"}},\n            {\"name\": \"ExitTime\", \"style\": {width : \"10%\"}},\n            {\"name\": \"Wow64\", \"style\": {width : \"10%\"}, \"update\" : \"toString\"}\n        ]\n    },\n\n    \"handles\" : {\n        info : `handles displays open handles in processes. This applies to files, registry keys, mutexes, named pipes, events, window stations, desktops, threads, and all other types of securable executive objects.\\n\n        - Offset: Offset of the handle\\n\n        - PID: Process id\\n\n        - Process: Process name\\n\n        - Name: Handle target\\n\n        - Type: Type of the handle target\\n\n        - GrantedAccess: Details of the granted access\\n\n        - HandleValue: Handle value`\n        ,\n        columns : [\n            {\"name\": \"Offset\", \"style\": {width : \"17.5%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"PID\", \"style\": {width : \"8%\"}},\n            {\"name\": \"Process\", \"style\": {width : \"10%\"}},\n            {\"name\": \"Name\", \"style\": {width : \"25%\"}},\n            {\"name\": \"HandleValue\", \"style\": {width : \"12%\"}},\n            {\"name\": \"Type\", \"style\": {width : \"12%\"}},\n            {\"name\": \"GrantedAccess\", \"style\": {width : \"15.5%\"}, \"update\" : \"toHex\"} // Turn values received from DB to hexadecimal\n        ]\n    },\n\n    \"envars\" : {\n        info : `envars displays process environment variables.\\n\n        - PID: Process ID\\n\n        - Process: process name\\n\n        - Block: variable location in memory\\n\n        - Variable: environment variable name\\n\n        - Value: environment variable value\\n`\n        ,\n        columns : [\n            {\"name\": \"PID\", \"style\": {width : \"10%\"}},\n            {\"name\": \"Process\", \"style\": {width : \"22.5%\"}},\n            {\"name\": \"Block\", \"style\": {width : \"22.5%\"}},\n            {\"name\": \"Variable\", \"style\": {width : \"22.5%\"}},\n            {\"name\": \"Value\", \"style\": {width : \"22.5%\"}}\n        ]\n    },\n\n    \"callbacks\" : {\n        info : `callbacks lists kernel callbacks and notification routines\\n\n        - Module: Module name\\n\n        - Type: Callback type\\n\n        - Callback: Callback address \\n\n        - Symbol: Symbol name\\n\n        - Detail: Details about the callback`\n        ,\n        columns : [\n            {\"name\": \"Module\", \"style\": {width : \"15%\"}},\n            {\"name\": \"Type\", \"style\": {width : \"23.33%\"}},\n            {\"name\": \"Callback\", \"style\": {width : \"23.33%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"Symbol\", \"style\": {width : \"23.33%\"}},\n            {\"name\": \"Detail\", \"style\": {width : \"15%\"}},\n        ]\n    },\n\n    \"modscan\" : {\n        info : `modscan command finds LDR_DATA_TABLE_ENTRY structures by scanning physical memory for pool tags. This can pick up previously unloaded drivers and drivers that have been hidden/unlinked by rootkits. Unlike modules the order of results has no relationship with the order in which the drivers loaded.\\n\n        - Offset: Module physical offset\\n\n        - Base: Module base address\\n\n        - Name: Module name \\n\n        - Path: Module path in disk\\n\n        - Size: Module size`\n        ,\n        columns : [\n            {\"name\": \"Offset\", \"style\": {width : \"20%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"Base\", \"style\": {width : \"20%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"Name\", \"style\": {width : \"20%\"}},\n            {\"name\": \"Path\", \"style\": {width : \"30%\"}},\n            {\"name\": \"Size\", \"style\": {width : \"10%\"}, \"update\" : \"bytesToSize\"}\n        ]\n    },\n\n\n    \"modules\" : {\n        info : `modules lists kernel drivers loaded on the system by walking the doubly-linked list of LDR_DATA_TABLE_ENTRY structures pointed to by PsLoadedModuleList. It cannot find hidden/unlinked kernel drivers, however modscan serves that purpose.\\n\n        - Offset: Module physical offset\\n\n        - Base: Module base address\\n\n        - Name: Module name \\n\n        - Path: Module path in disk\\n\n        - Size: Module size`\n        ,\n        columns : [\n            {\"name\": \"Offset\", \"style\": {width : \"20%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"Base\", \"style\": {width : \"20%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"Name\", \"style\": {width : \"20%\"}},\n            {\"name\": \"Path\", \"style\": {width : \"30%\"}},\n            {\"name\": \"Size\", \"style\": {width : \"10%\"}, \"update\" : \"bytesToSize\"}\n        ]\n    },\n\n    \"driverscan\" : {\n        info : `driverscan scans for drivers present in windows memory image.\\n\n        - Offset: Physical offset of the _DRIVER_OBJECT structure\\n\n        - Name: Device driver or filesystem driver\\n\n        - Driver Name: Name of the driver\\n\n        - Start: Starting memory address of the driver\\n\n        - Service Key: Service key name\\n\n        - Size: Driver size`\n        ,\n        columns : [\n            {\"name\": \"Offset\", \"style\": {width : \"18%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"Name\", \"style\": {width : \"18%\"}},\n            {\"name\": \"Driver Name\", \"style\": {width : \"18%\"}},\n            {\"name\": \"Start\", \"style\": {width : \"18%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"Service Key\", \"style\": {width : \"18%\"}},\n            {\"name\": \"Size\", \"style\": {width : \"10%\"}, \"update\" : \"bytesToSize\"}\n        ]\n    },\n\n    \"filescan\" : {\n        info : `filescan finds FILE_OBJECTs in physical memory using pool tag scanning.\\n\n        - Name: File name\\n\n        - Offset: Physical offset of the FILE_OBJECT\\n\n        - Size: FILE_OBJECT size\\n`\n        ,\n        columns : [\n            {\"name\": \"Name\", \"style\": {width : \"40%\"}},\n            {\"name\": \"Offset\", \"style\": {width : \"40%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"Size\", \"style\": {width : \"20%\"}}\n        ]\n    },\n\n    \"getserviceids\" : {\n        info : `getserviceids calculates the SIDs for services on a dump.\\n\n        - Service: Service name\\n\n        - SID: Calculated SID for the service`\n        ,\n        columns : [\n            {\"name\": \"Service\", \"style\": {width : \"25%\"}},\n            {\"name\": \"SID\", \"style\": {width : \"75%\"}},\n        ]\n    },\n\n    \"getsids\" : {\n        info : `getsids shows SIDs (Security Identifiers) associated with processes.\\n\n        - PID: Process ID\\n\n        - Process: Process name\\n\n        - Name: security principal name\\n\n        - SID: Security identifier value`\n        ,\n        columns : [\n            {\"name\": \"PID\", \"style\": {width : \"15%\"}},\n            {\"name\": \"Process\", \"style\": {width : \"15%\"}},\n            {\"name\": \"Name\", \"style\": {width : \"35%\"}},\n            {\"name\": \"SID\", \"style\": {width : \"35%\"}}\n        ]\n    },\n\n    \"privs\" : {\n        info : `privs lists process token privileges.\\n\n        - PID: Process ID\\n\n        - Process: Process name\\n\n        - Value: Privilege number\\n\n        - Attributes: Privilege attributes\\n\n        - Privilege: Privilege name\\n\n        - Description: Privilege description\\n`\n        ,\n        columns : [\n            {\"name\": \"PID\", \"style\" : {width : \"8%\"}},\n            {\"name\": \"Process\", \"style\": {width : \"21%\"}},\n            {\"name\": \"Value\", \"style\": {width : \"8%\"}},\n            {\"name\": \"Attributes\", \"style\": {width : \"21%\"}},\n            {\"name\": \"Privilege\", \"style\": {width : \"21%\"}},\n            {\"name\": \"Description\", \"style\": {width : \"21%\"}}\n        ]\n    },\n\n    \"svcscan\" : {\n        info : `svcscan finds windows services from memory dump.\\n\n        - Offset: Offset of the service\\n\n        - Order: Service boot order value\\n\n        - PID: Host process ID\\n\n        - Name: Service name\\n\n        - Display: Service display name\\n\n        - Type: Type of the service\\n\n        - Start: Service start option\\n\n        -- SERVICE_AUTO_START: A service started automatically by the service control manager during system startup.\\n\n        -- SERVICE_BOOT_START: A device driver started by the system loader. This value is valid only for driver services.\\n\n        -- SERVICE_DEMAND_START: A service started by the service control manager when a process calls the StartService function.\\n\n        -- SERVICE_DISABLED: A service that cannot be started. Attempts to start the service result in the error code ERROR_SERVICE_DISABLED.\\n\n        -- SERVICE_SYSTEM_START: A device driver started by the IoInitSystem function. This value is valid only for driver services.\\n\n        - State: Current state of the service\\n\n        - Binary: Binary path of the service`\n        ,\n        columns : [\n            {\"name\": \"Offset\", \"style\": {width: \"13.16666%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"Order\", \"style\": {width: \"7%\"}},\n            {\"name\": \"PID\", \"style\": {width: \"7%\"}},\n            {\"name\": \"Name\", \"style\": {width: \"13.16666%\"}},\n            {\"name\": \"Display\", \"style\": {width: \"13.16666%\"}},\n            {\"name\": \"Type\", \"style\": {width: \"13.16666%\"}},\n            {\"name\": \"Start\", \"style\": {width: \"13.16666%\"}},\n            {\"name\": \"State\", \"style\": {width: \"13.16666%\"}},\n            {\"name\": \"Binary\", \"style\": {width: \"7%\"}}\n        ]\n    },\n\n    \"mutantscan\" : {\n        info : `mutantscan scans for mutexes present in windows memory image.\\n\n        - Offset: Offset of the mutex\\n\n        - Name: Mutant name`\n        ,\n        columns : [\n            {\"name\": \"Offset\", \"style\": {width: \"35%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"Name\", \"style\": {width: \"65%\"}},\n        ]\n    },\n\n    \"poolscanner\" : {\n        info : `Generic poolscanner.\\n\n        - Offset: Pool offset\\n\n        - Name: Pool header filename\\n\n        - Tag: Pool tag\\n\n        - Layer: Memory layer`\n        ,\n        columns : [\n            {\"name\": \"Offset\", \"style\": {width: \"20%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"Name\", \"style\": {width: \"30%\"}},\n            {\"name\": \"Tag\", \"style\": {width: \"30%\"}},\n            {\"name\": \"Layer\", \"style\": {width: \"20%\"}}\n        ]\n    },\n\n    \"bigpools\" : {\n        info : `bigpools lists big page pools.\\n\n        - Allocation: Kernel memory address where the allocation begins\\n\n        - Tag: Pool tag name\\n\n        - PoolType: Type of allocated system memory\\n\n        - NumberOfBytes: Amount of allocated bytes`\n        ,\n        columns : [\n            {\"name\": \"Allocation\", \"style\": {width: \"26%\"}, \"update\" : [\"parseInt\",\"to64BitHex\"]}, // Turns string to integer and then integer to Hex, order of the array values is important here\n            {\"name\": \"Tag\", \"style\": {width: \"23%\"}},\n            {\"name\": \"PoolType\", \"style\": {width: \"26%\"}},\n            {\"name\": \"NumberOfBytes\", \"style\": {width: \"23%\"}, \"update\" : \"bytesToSize\"}\n        ]\n    },\n\n    \"driverirp\" : {\n        info : `driverirp lists IRPs for drivers.\\n\n        - Offset: IRP function offset\\n\n        - Driver Name: Driver name\\n\n        - IRP: IRP name\\n\n        - Address: Driver address\\n\n        - Module: Module name\\n\n        - Symbol: Symbol name`\n        ,\n        columns : [\n            {\"name\": \"Offset\", \"style\": {width: \"16.666%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"Driver Name\", \"style\": {width: \"16.666%\"}},\n            {\"name\": \"IRP\", \"style\": {width: \"16.666%\"}},\n            {\"name\": \"Address\", \"style\": {width: \"16.666%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"Module\", \"style\": {width: \"16.666%\"}},\n            {\"name\": \"Symbol\", \"style\": {width: \"16.666%\"}}\n        ]\n    },\n\n    \"verinfo\" : {\n        info : `verinfo lists version information from PE files.\\n\n        - PID: Process ID\\n\n        - Process: Process name\\n\n        - Base: Base address of the PE\\n\n        - Name: File name\\n\n        - Major: Major version\\n\n        - Minor: Minor version\\n\n        - Product: Product number\\n\n        - Build: Build number`\n        ,\n        columns : [\n            {\"name\": \"PID\", \"style\": {width: \"10%\"}},\n            {\"name\": \"Process\", \"style\": {width: \"16.6666%\"}},\n            {\"name\": \"Base\", \"style\": {width: \"16.6666%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"Name\", \"style\": {width: \"16.6666%\"}},\n            {\"name\": \"Major\", \"style\": {width: \"10%\"}},\n            {\"name\": \"Minor\", \"style\": {width: \"10%\"}},\n            {\"name\": \"Product\", \"style\": {width: \"10%\"}},\n            {\"name\": \"Build\", \"style\": {width: \"10%\"}}\n        ]\n    },\n\n    \"symlinkscan\" : {\n        info : `symlinkscan scans for symbolic link objects and outputs their information.\\n\n        - Offset: Process ID\\n\n        - CreateTime: Symbolic link creation time\\n\n        - From Name: Original name\\n\n        - To Name: Target name`\n        ,\n        columns : [\n            {\"name\": \"Offset\", \"style\": {width: \"20%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"CreateTime\", \"style\": {width: \"20%\"}},\n            {\"name\": \"From Name\", \"style\": {width: \"30%\"}},\n            {\"name\": \"To Name\", \"style\": {width: \"30%\"}}\n        ]\n    },\n\n    \"userassist\" : {\n        info : `userassist finds UserAssist keys from image.\\n\n        - Hive Offset: Offset of the key\\n\n        - Hive Name: Hive name\\n\n        - Path: Key path\\n\n        - Last Write Time: Last write time\\n\n        - Type: Data type\\n\n        - Name: Entry name\\n\n        - ID: Session ID\\n\n        - Count: Number of times the application was ran\\n\n        - Focus Count: Number of times the application has been focused into\\n\n        - Time Focused: Total time the application has been focused\\n\n        - Last Updated: Last time the application was ran`\n        ,\n        columns : [\n            {\"name\": \"Hive Offset\", \"style\": {width: \"10.8333%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"Hive Name\", \"style\": {width: \"10.8333%\"}},\n            {\"name\": \"Path\", \"style\": {width: \"10.8333%\"}},\n            {\"name\": \"Last Write Time\", \"style\": {width: \"10.8333%\"}},\n            {\"name\": \"Type\", \"style\": {width: \"7%\"}},\n            {\"name\": \"Name\", \"style\": {width: \"10.8333%\"}},\n            {\"name\": \"ID\", \"style\": {width: \"7%\"}},\n            {\"name\": \"Count\", \"style\": {width: \"7%\"}},\n            {\"name\": \"Focus Count\", \"style\": {width: \"7%\"}},\n            {\"name\": \"Time Focused\", \"style\": {width: \"7%\"}},\n            {\"name\": \"Last Updated\", \"style\": {width: \"10.8333%\"}}\n        ]\n    },\n\n    \"printkey\" : {\n        info : `printkey searches all hives and prints key information. This plugin has been run with default settings.\\n\n        - Hive Offset: Hive offset\\n\n        - Key: Key name\\n\n        - Name: Entry name\\n\n        - Type: Data type\\n\n        - Last Write Time: Last time modified\\n\n        - Volatile: Tells if keys or subkeys are either stable or volatile\\n\n        - Data: Entry data (Most likely always empty because no specific key is targeted)`\n        ,\n        columns : [\n            {\"name\": \"Hive Offset\", \"style\": {width: \"16.8%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"Key\", \"style\": {width: \"16.8%\"}},\n            {\"name\": \"Name\", \"style\": {width: \"16.8%\"}},\n            {\"name\": \"Type\", \"style\": {width: \"8%\"}},\n            {\"name\": \"Last Write Time\", \"style\": {width: \"16.8%\"}},\n            {\"name\": \"Volatile\", \"style\": {width: \"8%\"}, \"update\" : \"toString\"},\n            {\"name\": \"Data\", \"style\": {width: \"16.8%\"}}\n        ]\n    },\n\n    \"virtmap\" : {\n        info : `virtmap lists virtual mapped sections.\\n\n        - Region: Region name\\n\n        - Start offset: Section starting offset\\n\n        - End offset: Section ending offset`\n        ,\n        columns : [\n            {\"name\": \"Region\", \"style\": {width: \"30%\"}},\n            {\"name\": \"Start offset\", \"style\": {width: \"35%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"End offset\", \"style\": {width: \"35%\"}, \"update\" : \"to64BitHex\"}\n        ]\n    },\n\n    \"vadinfo\" : {\n        info : `vadinfo displays extended information about a process's VAD nodes.\\n\n        - PID: Process ID\\n\n        - Process: Process name\\n\n        - Offset: VAD offset\\n\n        - Start VPN: Starting virtual addresses in process memory that the MMVAD structure pertains to\\n\n        - End VPN: Ending virtual addresses in process memory that the MMVAD structure pertains to\\n\n        - Tag: VAD tag\\n\n        - Protection: Memory protection\\n\n        - CommitCharge: This value specifies the number of committed pages in the region\\n\n        - PrivateMemory: Committed regions that cannot be shared with other processes\\n\n        - Parent: Parent node address\\n\n        - File: File path`\n        ,\n        columns : [\n            {\"name\": \"PID\", \"style\": {width : \"6%\"}},\n            {\"name\": \"Process\", \"style\": {width : \"13%\"}},\n            {\"name\": \"Offset\", \"style\": {width : \"10%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"Start VPN\", \"style\": {width : \"10%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"End VPN\", \"style\": {width : \"10%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"Tag\", \"style\": {width : \"6%\"}},\n            {\"name\": \"CommitCharge\", \"style\": {width : \"6%\"}},\n            {\"name\": \"Protection\", \"style\": {width : \"10%\"}},\n            {\"name\": \"PrivateMemory\", \"style\": {width : \"6%\"}},\n            {\"name\": \"Parent\", \"style\": {width : \"10%\"}, \"update\" : [\"parseInt\",\"to64BitHex\"]},\n            {\"name\": \"File\", \"style\": {width : \"13%\"}}\n        ]\n    },\n\n    \"hivelist\" : {\n        info : `hivelist locates virtual addresses of registry hives in memory.\\n\n        - Offset: Hive offset\\n\n        - FileFullPath: Hive path on disk`\n        ,\n        columns : [\n            {\"name\": \"Offset\", \"style\": {width: \"30%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"FileFullPath\", \"style\": {width: \"70%\"}}\n        ]\n    },\n\n    \"ssdt\" : {\n        info : `ssdt lists system call table.\\n\n        - Index: SSDT index number\\n\n        - Address: SSDT location in memory\\n\n        - Module: Module owning the SSDT\\n\n        - Symbol: SSDT name\\n`\n        ,\n        columns : [\n            {\"name\": \"Index\", \"style\" : {width : \"10%\"}},\n            {\"name\": \"Address\", \"style\": {width : \"30%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"Module\", \"style\": {width : \"30%\"}},\n            {\"name\": \"Symbol\", \"style\": {width : \"30%\"}}\n        ]\n    },\n\n    \"malfind\" : {\n        info : `malfind lists process memory ranges that potentially contain injected code. It looks for mappings with certain protection bits and displays the matching mappings.\\n\n        - Process: Process name\\n\n        - PID: Process ID\\n\n        - Start VPN: Starting virtual address in the process memory\\n\n        - End VPN: Ending virtual address in the process memory\\n\n        - PrivateMemory: Private memory bit value\\n\n        - Protection: Describes what kind of access is permitted to this memory area.\\n\n        - Tag: VAD Tag\\n\n        - CommitCharge: specifies the number of pages committed in the region described by the\n        VAD node\\n\n        - Hexdump: Preview hexdump from the memory\\n\n        - Disasm: Preview disassembled if possible\\n`\n        ,\n        columns : [\n            {\"name\": \"Process\", \"style\": {width : \"14%\"}},\n            {\"name\": \"PID\", \"style\": {width : \"6%\"}},\n            {\"name\": \"Start VPN\", \"style\": {width : \"11%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"End VPN\", \"style\": {width : \"11%\"}, \"update\" : \"to64BitHex\"},\n            {\"name\": \"PrivateMemory\", \"style\": {width : \"7%\"}},\n            {\"name\": \"Protection\", \"style\": {width : \"11%\"}},\n            {\"name\": \"Tag\", \"style\": {width : \"6%\"}},\n            {\"name\": \"CommitCharge\", \"style\": {width : \"6%\"}},\n            {\"name\": \"Hexdump\", \"style\": {width : \"14%\"}},\n            {\"name\": \"Disasm\", \"style\": {width : \"14%\"}}\n        ]\n    },\n\n    \"info\" : {\n        info : `info shows OS & kernel details of the memory sample being analyzed.\\n\n        - Kernel Base: Kernel base virtual offset\\n\n        - DTB: Directory Table Base which contains list of processes page tables\\n\n        - Is64BIt: Is the system 64-bit\\n\n        - IsPAE: Are physical address extensions enabled\\n\n        - Primary: Primary layer name\\n\n        - Memory Layer: Memory layer name\\n\n        - KdVersionBlock: Kernel debugger data block \\n\n        - Major/Minor: Major and minor build numbers\\n\n        - Machine Type: Specifies the machine's CPU architecture\\n\n        - KeNumberProcessors: Number of processors in the system\\n\n        - NtSystemRoot: directory where the core of Windows operating systems files are stored\\n\n        - NtProductType: indicates the Windows product type\\n\n        - NtMajorVersion: Major OS version\\n\n        - NtMinorVersion: Minor OS version\\n\n        - PE Major Operating System Version: Major version number of the required operating system\\n\n        - PE Major Operating System Version: Minor version number of the required operating system\\n\n        - PE Machine: Type of target machine\\n\n        - PE Time Date Stamp: Indicates when the file was created\\n`\n    }\n}\n\nexport { plugins };","import React from \"react\";\nimport { search, setSearch, filterSearch, processFilters} from \"../../Search\";\nimport {pluginInfo, checkIfSelected, buildBasicPluginBox, infoBox,\n    pluginBoxHeader, pluginDataColumns, pluginContainerFooter,\n    changePage, visibleDataBlocks, displayOrder, showAll, showLess, \n    buildJSONDownloadIcon, pluginDataBlocksFill} from \"../../../app/Utils.js\";\nimport \"../Common.css\";\nimport \"./WindowsDetails.css\";\n\nclass WindowsPlugin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dumpData: {}, // Object containing all plugin data from DB\n            pages : null, // Plugin page details\n            pagesCopy : null, // Copy of page details\n            search : \"\"\n        };\n\n        this.buildPlugin = this.buildPlugin.bind(this);\n        this.buildBasicPluginBox = buildBasicPluginBox.bind(this);\n        // Plugin box related functions\n        this.pluginBoxHeader = pluginBoxHeader.bind(this); \n        this.pluginDataColumns = pluginDataColumns.bind(this);\n        this.pluginContainerFooter = pluginContainerFooter.bind(this);\n        this.pluginDataBlocksFill = pluginDataBlocksFill.bind(this);\n        this.pluginInfo = pluginInfo.bind(this);\n        this.buildJSONDownloadIcon = buildJSONDownloadIcon.bind(this);\n        this.infoBox = infoBox.bind(this);\n        // Category related functions\n        this.checkIfSelected = checkIfSelected.bind(this);\n        // Search functions\n        this.filterSearch = filterSearch.bind(this);\n        this.search = search.bind(this);\n        this.processFilters = processFilters.bind(this);\n        this.setSearch = setSearch.bind(this);\n        // Page displaying functions\n        this.changePage = changePage.bind(this);\n        this.visibleDataBlocks = visibleDataBlocks.bind(this);\n        this.displayOrder = displayOrder.bind(this);\n        this.showLess = showLess.bind(this);\n        this.showAll = showAll.bind(this);\n    }\n    \n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (prevState.pages == null) { // Plugin is rendered first time - fill all states with corresponding props\n            return {\n                pages: nextProps.pages,\n                pagesCopy: nextProps.pages,\n                dumpData: nextProps.dumpData,\n                selectedPlugins: nextProps.selectedPlugins,\n                search: nextProps.search\n            };\n        } else if (nextProps.pages !== prevState.pagesCopy) { // If all plugins data row visibility amount is changed\n            return {\n                pages: nextProps.pages,\n                pagesCopy: nextProps.pages,\n                selectedPlugins: nextProps.selectedPlugins,\n                dumpData: nextProps.dumpData\n            };\n        } else if ((prevState.dumpData.length === nextProps.dumpData.length && prevState.dumpData !== nextProps.dumpData) || (nextProps.search == prevState.search && nextProps.pages === prevState.pagesCopy) || (nextProps.search != prevState.search && nextProps.search === \"\")) { // Checks to make column order display work\n            return {\n                pages: prevState.pages,\n                selectedPlugins: nextProps.selectedPlugins,\n                dumpData: prevState.dumpData\n            }\n        }\n        else { // This plugin's data rows visibility amount is changed\n            return {\n                pages: prevState.pages,\n                selectedPlugins: nextProps.selectedPlugins,\n                dumpData: nextProps.dumpData\n            };\n        }\n    }\n\n    // Build basic box for plugin data\n    buildPlugin () {\n        return this.buildBasicPluginBox(this.props.pluginName, this.props.columns, this.props.info);\n    }\n\n    render() {\n        // Build container for the plugin\n        var pluginBox = this.buildPlugin(this)\n\n        // If no data is returned from buildPlugin, return null\n        if (pluginBox == null) {\n            return (null);\n        }\n        else { // Render plugin\n            return(\n                <div id=\"outer-plugin-box\" className={this.props.pluginName} key={\"outerpluginbox\" + this.props.pluginName}>\n                    {pluginBox}\n                </div>\n            )\n        }\n    }\n}\n\nexport default WindowsPlugin;","import React from \"react\";\nimport Select from 'react-select';\nimport { searchBar, search, setSearch, filterSearch, processFilters} from \"../../Search\";\nimport {pageHeader, pluginInfo, checkIfSelected, buildBasicPluginBox, infoBox, DOMParserInfoBox,\n    pluginBoxHeader, pluginDataColumns, pluginContainerFooter, buildHeaderBlocksMenu, \n    to64BitHex, toHex, bytesToSize, allVisibleDataBlocks, buildJSONDownloadIcon, pluginDataBlocksFill} from \"../../../app/Utils.js\";\nimport { plugins } from \"./Plugins\";\nimport WindowsPlugin from \"./WindowsPlugin\";\nimport {pageHeaderUsage} from \"../../Usage.js\";\nimport \"../../Reports.css\";\nimport \"../Common.css\";\nimport \"./WindowsDetails.css\";\nimport \"../../Reports\";\n\n\n// Contains all plugins that are available to user\nconst pluginNames = [\n    { value: 'basicdetails', label: 'basicdetails' },\n    { value: 'bigpools', label: 'bigpools' },\n    { value: 'callbacks', label: 'callbacks' },\n    { value: 'dlllist', label: 'dlllist' },\n    { value: 'driverirp', label: 'driverirp' },\n    { value: 'driverscan', label: 'driverscan' },\n    { value: 'envars', label: 'envars' },\n    { value: 'filescan', label: 'filescan' },\n    { value: 'getserviceids', label: 'getserviceids' },\n    { value: 'getsids', label: 'getsids' },\n    { value: 'handles', label: 'handles' },\n    { value: 'hivelist', label: 'hivelist' },\n    { value: 'info', label: 'info' },\n    { value: 'malfind', label: 'malfind' },\n    { value: 'modscan', label: 'modscan' },\n    { value: 'modules', label: 'modules' },\n    { value: 'mutantscan', label: 'mutantscan' },\n    { value: 'netscan', label: 'netscan' },\n    { value: 'poolscanner', label: 'poolscanner' },\n    { value: 'printkey', label: 'printkey' },\n    { value: 'privs', label: 'privs' },\n    { value: 'psscan', label: 'psscan' },\n    { value: 'ssdt', label: 'ssdt' },\n    { value: 'svcscan', label: 'svcscan' },\n    { value: 'symlinkscan', label: 'symlinkscan' },\n    { value: 'userassist', label: 'userassist' },\n    { value: 'vadinfo', label: 'vadinfo' },\n    { value: 'verinfo', label: 'verinfo' },\n    { value: 'virtmap', label: 'virtmap' },\n];\n\n// Plugin dropdown select-menu styles\nconst selectStyles = {\n    container: base => ({ \n        ...base, \n        width: 300,\n        \"@media screen and (max-width: 1700px)\": {\n            ...base[\"@media only screen and (max-width: 1700px)\"],\n            width: 200,\n            \"marginLeft\": 10,\n        },\n    }),\n    control: (base, state) => ({\n        ...base,\n        width: 300,\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        \"maxHeight\": state.menuIsOpen ? \"none\" : 30,\n        \"@media screen and (max-width: 1700px)\": {\n        ...base[\"@media only screen and (max-width: 1700px)\"],\n        width: 200\n        },\n      }),\n    indicatorsContainer: (base, state) => ({\n        ...base,\n        \"maxHeight\": state.menuIsOpen ? \"none\" : 40,\n    }),\n    menu: base => ({ \n        ...base, \n        width: 300,\n        \"@media screen and (max-width: 1700px)\": {\n            ...base[\"@media only screen and (max-width: 1700px)\"],\n            width: 200\n        },\n    }),\n}\n\nclass WindowsDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dumpData: {}, // Object containing all dump data from DB like plugin results, system name etc.\n            search: \"\", // Search filters\n            pageDetails : { pages : {} }, // Plugin page details\n            selectedPlugins: pluginNames, // Currently selected plugins (These are visible to user)\n            pluginCategory: \"all\" // Plugin category\n        };\n\n        // Main function\n        this.buildPage = this.buildPage.bind(this);\n        // Page header functions\n        this.pageHeader = pageHeader.bind(this);\n        this.buildHeaderBlocksMenu = buildHeaderBlocksMenu.bind(this);\n        this.buildPluginCheckBox = this.buildPluginCheckBox.bind(this);\n        this.buildPluginCategoryMenu = this.buildPluginCategoryMenu.bind(this);\n        // Functions for rendering plugin data\n        this.basicWindowsDetails = this.basicWindowsDetails.bind(this);\n        this.buildBasicPluginBox = buildBasicPluginBox.bind(this);\n        this.info = this.info.bind(this);\n        // Plugin box related functions\n        this.pluginBoxHeader = pluginBoxHeader.bind(this); \n        this.pluginDataColumns = pluginDataColumns.bind(this);\n        this.pluginContainerFooter = pluginContainerFooter.bind(this);\n        this.pluginDataBlocksFill = pluginDataBlocksFill.bind(this);\n        this.DOMParserInfoBox = DOMParserInfoBox.bind(this);\n        this.pluginInfo = pluginInfo.bind(this);\n        this.infoBox = infoBox.bind(this);\n        this.buildJSONDownloadIcon = buildJSONDownloadIcon.bind(this);\n        // Category related functions\n        this.checkIfSelected = checkIfSelected.bind(this);\n        this.pickSelectedPlugins = this.pickSelectedPlugins.bind(this);\n        // Search functions\n        this.filterSearch = filterSearch.bind(this);\n        this.searchBar = searchBar.bind(this);\n        this.search = search.bind(this);\n        this.processFilters = processFilters.bind(this);\n        this.setSearch = setSearch.bind(this);\n        // Data modification functions\n        this.toHex = toHex.bind(this)\n        this.to64BitHex = to64BitHex.bind(this);\n        this.bytesToSize = bytesToSize.bind(this);\n        // Page displaying functions\n        this.allVisibleDataBlocks = allVisibleDataBlocks.bind(this);\n    }\n\n    // If state changes, render plugins again\n    static getDerivedStateFromProps(nextProps, prevState) {\n\n        // Ignore these keys when populating this.state.pagedetails\n        const ignore = [ \"_id\", \"os_info\", \"info\", \"currenttime\", \"analyse_state\"] \n\n        // When dump plugin data is rendered the first time\n        if (Object.keys(prevState.pageDetails.pages).length === 0) {\n            let pages = { pages : {} };\n            for (const value in nextProps.dumpData) { // Populate this.state.pageDetails with default values\n                if (Array.isArray(nextProps.dumpData[value]) && !(value in ignore)) {\n                    pages.pages[value] = {pageNumber : 1, showAll : false, elementsVisible : 20};\n                }\n            }\n\n            // this.state.dumpData is copied\n            var dumpDataCopy = JSON.parse(JSON.stringify(nextProps.dumpData))\n\n            // Update plugin data if specified by \"update\" attribute in Plugins.js\n            for (var plugin in plugins) { // Loop through plugins\n                for (var column in plugins[plugin].columns) { // Loop through plugin column array\n                    if (\"update\" in plugins[plugin].columns[column]) { // If one of columns objects has \"update\" attribute, all that column data is processed someway depending on the \"update\" attribute value\n                        if (plugins[plugin].columns[column][\"update\"].includes(\"parseInt\")) { // To Integer\n                            for (var data in dumpDataCopy[plugin]) { // Go through through all objects in plugin\n                                try {\n                                    dumpDataCopy[plugin][data][plugins[plugin].columns[column][\"name\"]] = parseInt(dumpDataCopy[plugin][data][plugins[plugin].columns[column][\"name\"]])\n                                }\n                                catch(err){ // null values cannot be converted to int\n                                    continue;\n                                }\n                            }\n                        }\n                        else if (plugins[plugin].columns[column][\"update\"].includes(\"toString\")) { // To String\n                            for (var data in dumpDataCopy[plugin]) {  // Go through through all objects in plugin\n                                try {\n                                    dumpDataCopy[plugin][data][plugins[plugin].columns[column][\"name\"]] = dumpDataCopy[plugin][data][plugins[plugin].columns[column][\"name\"]].toString()\n                                }\n                                catch(err){ // null values cannot be converted to string\n                                    continue;\n                                }\n                            }\n                        }\n                        if (plugins[plugin].columns[column][\"update\"].includes(\"to64BitHex\")) { // Integer to HEX\n                            for (var data in dumpDataCopy[plugin]) {  // Go through through all objects in plugin\n                                try {\n                                    dumpDataCopy[plugin][data][plugins[plugin].columns[column][\"name\"]] = to64BitHex(dumpDataCopy[plugin][data][plugins[plugin].columns[column][\"name\"]])\n                                }\n                                catch(err) {\n                                    continue;\n                                }\n                            }\n                        }\n                        else if (plugins[plugin].columns[column][\"update\"].includes(\"bytesToSize\")) { // Bytes to size (KB, MB, GB etc.)\n                            for (var data in dumpDataCopy[plugin]) {  // Go through through all objects in plugin\n                                try {\n                                    dumpDataCopy[plugin][data][plugins[plugin].columns[column][\"name\"]] = bytesToSize(dumpDataCopy[plugin][data][plugins[plugin].columns[column][\"name\"]])\n                                }\n                                catch(err) {\n                                    continue;\n                                }\n                            }\n                        }\n                        else if (plugins[plugin].columns[column][\"update\"].includes(\"toHex\")) { // To HEX\n                            for (var data in dumpDataCopy[plugin]) {  // Go through through all objects in plugin\n                                try {\n                                    dumpDataCopy[plugin][data][plugins[plugin].columns[column][\"name\"]] = toHex(dumpDataCopy[plugin][data][plugins[plugin].columns[column][\"name\"]])\n                                }\n                                catch(err) {\n                                    continue;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            return { // Update pageDetails and dumpData states\n                pageDetails : pages,\n                dumpData: dumpDataCopy\n            };\n        }\n        else { // If not rendered for first time\n            var pages = prevState.pageDetails;\n            return {\n                pageDetails : pages,\n                dumpData: prevState.dumpData\n            };\n        }\n    }\n\n    // Build react-select checkbox to header\n    buildPluginCheckBox () {\n        const { selectedPlugins } = this.state;\n    \n        return <Select\n        autoFocus\n        isMulti\n        placeholder={\"Remove plugins\"}\n        className={\"plugin-select\"}\n        value={selectedPlugins}\n        onChange={this.handleChange}\n        options={pluginNames}\n        closeMenuOnSelect={false}\n        hideSelectedOptions={true}\n        allowSelectAll={true}\n        styles={selectStyles}\n        />;\n    }\n\n    // Main function called by render bringing all blocks together\n    buildPage () {\n\n        // For debugging\n        // console.log(this.state.dumpData) \n        const items = [];\n\n        items.push(this.pageHeader(pageHeaderUsage))\n        items.push(this.basicWindowsDetails())\n        items.push(this.info())\n        var ignore = [\"info\"];\n        for (var plugin in plugins) { // Create generic boxes for plugins in Plugins.js file\n\n            if (ignore.includes(plugin)) {\n                continue;\n            }\n\n            if (this.checkIfSelected(this.state.selectedPlugins, plugin) === false) { // Check if plugin is selected\n                continue;\n            }\n                    \n            let dumpData = this.search(this.state.dumpData[plugin]); // Do search for the plugin data\n\n            try { // Check that plugin passes search filters\n                if (dumpData.length === 0 ||dumpData == null || dumpData === \"ERROR\" || dumpData === \"UNSATISFIED\") {\n                    continue;\n                }\n            } catch (error) {\n                continue;\n            }\n            // Create plugin box and push it to DOM\n            items.push(<WindowsPlugin dumpData={dumpData} \n                    pages={this.state.pageDetails.pages[plugin]}\n                    selectedPlugins={this.state.selectedPlugins}\n                    pluginName={plugin}\n                    columns={plugins[plugin].columns}\n                    info={plugins[plugin].info}\n                    search={this.state.search}\n                    />)\n        }\n        return items;\n    }\n\n    // Update selectedPlugins-state\n    handleChange = selectedPlugins => {\n        this.setState({ selectedPlugins });\n        console.log(`Option selected:`, selectedPlugins);\n    };\n\n    // Picks plugins that will be rendered to user\n    pickSelectedPlugins(value) {\n\n        var categoryPlugins = []; // array populated with selected plugins\n\n        if (value === \"all\") { // Show all plugins\n            categoryPlugins = pluginNames;\n        } else if (value === \"processes\") { // Show process related plugins\n            categoryPlugins = [\n                { value: 'envars', label: 'envars' },\n                { value: 'handles', label: 'handles' },\n                { value: 'malfind', label: 'malfind' },\n                { value: 'mutantscan', label: 'mutantscan' },\n                { value: 'privs', label: 'privs' },\n                { value: 'psscan', label: 'psscan' },\n                { value: 'vadinfo', label: 'vadinfo' }\n            ];\n        } else if (value === \"kernel\") { // Show kernel related plugins\n            categoryPlugins = [\n                { value: 'bigpools', label: 'bigpools' },\n                { value: 'callbacks', label: 'callbacks' },\n                { value: 'poolscanner', label: 'poolscanner' },\n                { value: 'ssdt', label: 'ssdt' },\n                { value: 'virtmap', label: 'virtmap' }\n            ];\n        } else if (value === \"network\") { // Show network related plugins\n            categoryPlugins = [\n                { value: 'netscan', label: 'netscan' },\n                { value: 'netstat', label: 'netstat' },\n            ];\n        } else if (value === \"modules\") { // Show modules related plugins\n            categoryPlugins = [\n                { value: 'driverirp', label: 'driverirp' },\n                { value: 'driverscan', label: 'driverscan' },\n                { value: 'modscan', label: 'modscan' },\n                { value: 'modules', label: 'modules' }\n            ];\n        } else if (value === \"services\") { // Show services related plugins\n            categoryPlugins = [\n                { value: 'getserviceids', label: 'getserviceids' },\n                { value: 'getsids', label: 'getsids' },\n                { value: 'svcscan', label: 'svcscan' }\n            ];\n        } else if (value === \"registry\") { // Show registry related plugins\n            categoryPlugins = [\n                { value: 'hivelist', label: 'hivelist' },\n                { value: 'printkey', label: 'printkey' },\n                { value: 'userassist', label: 'userassist' }\n            ];\n        } else if (value === \"files\") { // Show files related plugins\n            categoryPlugins = [\n                { value: 'dlllist', label: 'dlllist' },\n                { value: 'filescan', label: 'filescan' },\n                { value: 'symlinkscan', label: 'symlinkscan' },\n                { value: 'verinfo', label: 'verinfo' }\n            ];\n        }\n        this.handleChange(categoryPlugins);\n    }\n\n    // Builds plugin category menu inside the header\n    buildPluginCategoryMenu () {\n        const items = [];\n        items.push(\n            <select id=\"plugin-category-select\" onChange={(evt) => this.pickSelectedPlugins(evt.target.value)}>\n                <option disabled value >Plugin categories</option>\n                <option value=\"all\">All</option>\n                <option value=\"kernel\">Kernel</option>\n                <option value=\"processes\">Processes</option>\n                <option value=\"modules\">Modules</option>\n                <option value=\"network\">Network</option>\n                <option value=\"services\">Services</option>\n                <option value=\"registry\">Registry</option>\n                <option value=\"files\">Files</option>\n            </select>\n        )\n        return items;\n    }\n\n    // Builds and returns structure containing general information about the dump which is being analysed\n    basicWindowsDetails () {\n\n        const items = [];\n        var name = \"basicdetails\"\n        var dumpData = this.state.dumpData\n        if (this.checkIfSelected(this.state.selectedPlugins, name) === false) {\n            return null;\n        }\n\n        var info = `This primary section of the report contains basic information about the dump.\\n\n        Under this section is search field and tables for each plugin used on the dump. These tables display data retrieved from the plugin.\\n\n        Each plugin section contains information button like this one. Pressing the button displays basic information related to the plugin and its columns.`; \n\n        try { // Check if OS related data is available and create string containing all that data\n            var osData = dumpData.os_info.os + \" \" + dumpData.os_info[\"ProductType\"] + \" \" + dumpData.os_info[\"NtMajorVersion\"] + \".\" + dumpData.os_info[\"NtMinorVersion\"]\n        }\n        catch (err) {\n            var osData = \"-\"\n        }\n\n        items.push(\n            <div id=\"basic-details-container\" className=\"windows\">\n                <div id=\"header\">\n                    <img src=\"images/plugin-info.png\" id=\"info-button\" onClick={() => this.pluginInfo(name)} />\n                    {this.infoBox(name, info, \"Basic details\")}\n                    <div id=\"header-name\">Basic details</div>\n                </div>\n                <div id=\"details\">\n                    <ul id=\"detail-block\">\n                        <li id=\"detail-header\">System Name</li>\n                        <li id=\"detail-data\">{dumpData.name == null ? \"-\" : dumpData.name}</li>\n                    </ul>\n                    <ul id=\"detail-block\">\n                        <li id=\"detail-header\">Dump size</li>\n                        <li id=\"detail-data\">{dumpData.dumpsize == null ? \"-\" : this.bytesToSize(dumpData.dumpsize)}</li>\n                    </ul>\n                    <ul id=\"detail-block\">\n                        <li id=\"detail-header\">OS</li>\n                        <li id=\"detail-data\">{osData}</li>\n                    </ul>\n                    <ul id=\"detail-block\">\n                        <li id=\"detail-header\">Processes</li>\n                        <li id=\"detail-data\">{Array.isArray(dumpData.psscan) === false ? \"-\" : dumpData.psscan.length}</li>\n                    </ul>\n                    <ul id=\"detail-block\" className=\"right-side\">\n                        <li id=\"detail-header\">Kernel modules</li>\n                        <li id=\"detail-data\">{Array.isArray(dumpData.modscan) === false ? \"-\" : dumpData.modscan.length}</li>\n                    </ul>\n                </div>\n            </div>\n        )\n        return items;\n    }\n\n    // Individual plugin-container created for windows.info.Info-plugin, since its data structure differs from all other plugins\n    info () {\n        const items = [];\n        var pluginName = \"info\"\n        var dumpData = this.state.dumpData[pluginName]\n        if (this.checkIfSelected(this.state.selectedPlugins, pluginName) === false) {\n            return null;\n        }\n        dumpData = this.search(dumpData);\n        try {\n            if (dumpData.length === 0)\n                return null;\n        } catch (error) {\n            return null;\n        }\n\n        try {\n            var info = plugins[pluginName].info; // Get info from Plugins.js\n            var filteredData = dumpData.filter(function(dump) { return dump.Variable != (\"Symbols\" || \"SystemTime\"); }); // Remove symbols and SystemTime data\n        } catch (error) {\n            return null;\n       }\n\n        // Build all data blocks\n        items.push(\n        <div id=\"plugin-box\" className={pluginName} key={\"pluginbo\" + pluginName}>\n            {this.pluginBoxHeader(pluginName, info)}\n            <table id=\"plugin-container\" className={pluginName} key={\"plugin-container\" + pluginName}>\n                <tbody key={\"plugin-container tbody\" + pluginName}>\n                    {filteredData.map((column, index) => (\n                        <tr id=\"info-block\" key={\"info info-block\" + index}>\n                            <th id=\"info-column\" key={\"info info-column\" + index}>{column.Variable}</th>\n                            <td id=\"info-value\" key={\"info info-value\" + index}>{column.Value}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n        );\n        return items;\n    }\n\n    render() {\n        return(\n            <div id=\"windows-dump-page\">\n                {this.buildPage(this)}\n            </div>\n        )\n    }\n}\n\nexport default WindowsDetails;","import $ from \"jquery\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport LinuxDetails from \"./details/linux/LinuxDetails\";\nimport WindowsDetails from \"./details/windows/WindowsDetails\";\nimport {buildInfoPopUp, showInfoPopUp, pluginInfo, infoBox, DOMParserInfoBox} from \"../app/Utils.js\";\nimport {reportSearch, processFilters, filterSearch, checkReports, removeFilters} from \"./Search.js\";\nimport { reportsSearchUsage, reportsUsage, pluginSelectImages } from \"./Usage.js\";\nimport \"./Reports.css\";\nimport { plugins as windowsPlugins } from \"./details/windows/Plugins\";\nimport { plugins as linuxPlugins } from \"./details/linux/Plugins\";\n\nclass Reports extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            basicLinuxData: [], // Contains general information of each linux dump\n            basicWindowsData: [], // Contains general information of each windows dump\n            analyzeMode: false, // false: no specific dump is being analysed - true: dump is being analysed\n            analysedDump: [], // Analysed dump data\n            analysedDumpOS: null, // Analysed dump OS\n            tagColor: \"#F68B8B\", // Current tagColor\n            search: \"\" // Contains search filters\n        };\n\n        // Building blocks for reports and columns\n        this.buildLinuxReports = this.buildLinuxReports.bind(this);\n        this.buildWindowsReports = this.buildWindowsReports.bind(this);\n        this.buildResultsColumns = this.buildResultsColumns.bind(this);\n        this.DOMParserInfoBox = DOMParserInfoBox.bind(this);\n        this.pluginInfo = pluginInfo.bind(this);\n        this.infoBox = infoBox.bind(this);\n        // Get report / reports\n        this.getReports = this.getReports.bind(this);\n        // Search functions\n        this.reportSearch = reportSearch.bind(this);\n        this.processFilters = processFilters.bind(this);\n        this.filterSearch = filterSearch.bind(this);\n        this.checkReports = checkReports.bind(this);\n        this.removeFilters = removeFilters.bind(this);\n        // Pop-up functions\n        this.buildInfoPopUp = buildInfoPopUp.bind(this);\n        this.showInfoPopUp = showInfoPopUp.bind(this);\n        // Plugin select functions\n        this.buildPluginSelectBox = this.buildPluginSelectBox.bind(this);\n        this.selectAllPlugins = this.selectAllPlugins.bind(this);\n        this.runPlugins = this.runPlugins.bind(this);\n        this.getPluginRunStatus = this.getPluginRunStatus.bind(this);\n        // Editbox functions\n        this.buildEditBox = this.buildEditBox.bind(this);\n        this.updateDumpData = this.updateDumpData.bind(this);\n        // Tag functions\n        this.chooseTagColor = this.chooseTagColor.bind(this);\n        this.addTag = this.addTag.bind(this);\n        this.buildTags = this.buildTags.bind(this);\n        this.removeTag = this.removeTag.bind(this);\n        this.tagToSearch = this.tagToSearch.bind(this);\n        // Delete functions\n        this.buildDeleteBox = this.buildDeleteBox.bind(this);\n        this.deleteDumpData = this.deleteDumpData.bind(this);\n        this.displayCheckBox = this.displayCheckBox.bind(this);\n        // Analyse functions\n        this.StartAnalyzeMode = this.StartAnalyzeMode.bind(this);\n        //this.analyzeModeState = this.analyzeModeState.bind(this);\n        this.returnFromAnalysis = this.returnFromAnalysis.bind(this);\n    }\n\n    // When component mounts for the first time, it tries to contact DB through Flask API and get basic data from all Linux and Windows dumps\n    componentDidMount() {\n        this._isMounted = true;\n        // If Linux or Windows data state is empty, get reports \n        if ((!this.state.basicLinuxData.length || !this.state.basicWindowsData.length) && this.state.analyzeMode === false) { \n            var linuxData = this.getReports(\"linux\");\n            var windowsData = this.getReports(\"windows\");\n            // All the dumps basic data is put into these states\n            this.setState({basicLinuxData: linuxData, basicWindowsData: windowsData}, function() {\n                console.log(\"+ Basic data from dumps retrieved\")\n            });\n        }\n        else if (this.state.analyzeMode === false) { // If no specific dump is being analysed\n            var results = this.buildWindowsReports();\n            results.push(this.buildLinuxReports())\n            ReactDOM.render(results, document.getElementById('results'))\n        }\n    }\n    \n    // Whenever a component gets updated it renders the basic data from dumps if no dump is being analyzed\n    componentDidUpdate () {\n        if (this.state.analyzeMode === false) {\n            $(\"#loading-reports\").show()\n            var results = [];\n            results.push(this.buildWindowsReports());\n            results.push(this.buildLinuxReports())\n            if (results != undefined) {\n                $(\"#loading-reports\").hide()\n                ReactDOM.render(results, document.getElementById('results'))\n            }\n            $(\"#loading-reports\").hide()\n        }\n    }\n\n    // Sets analyseMode state\n    StartAnalyzeMode(evt, os, mode) {\n\n        // analyzeMode-state is set to true\n        // chosen dump data is retrieved from DB (evt.target.name is the ID used to get specific dumb data from DB)\n        var dumpData = this.getReports(os, evt.target.name);\n        // Update states with dump's data and set analyseMode to true \n        this.setState({analyzeMode: mode, analysedDump: dumpData, analysedDumpOS: os}); \n    }\n\n    // Sets tagColor state\n    tagColorState(color) {\n        this.setState({tagColor: color})\n    }\n\n    // Builds columns for linux and windows reports\n    buildResultsColumns () {\n        const items  = [];\n        // If a dump is being analyzed, this will not be rendered\n        var searchName = \"search\"\n        var nameResults = \"left-column\"\n\n        if (this.state.analyzeMode === false) {\n            items.push(\n                <div id=\"page-box\">\n                    {this.buildInfoPopUp()}\n                    <form id=\"reports-search-container\" onSubmit={(evt) => { evt.preventDefault(); this.setState({search: $('[name=\"search\"]')[0].value})}}>\n                        <button className=\"search-btn\" onClick={() => this.setState({search: $('[name=\"search\"]')[0].value})}> Search </button>\n                        <input type=\"text\" className=\"search-field\" name=\"search\"></input>\n                        <img id=\"loading-reports\" src=\"images/plugin-loading.gif\" />\n                        <img src=\"images/plugin-info.png\" name={searchName} id=\"info-button\" onClick={() => this.pluginInfo(searchName)} />\n                        {this.DOMParserInfoBox(searchName, reportsSearchUsage, \"Search how-to\")}\n                    </form>\n                    <div id=\"results-container\">\n                        <div className=\"results-columns\">\n                            <ul id=\"columns\">\n                                <li id=\"column\" className=\"left-column\">\n                                    <img src=\"images/plugin-info-white.png\" name={nameResults} id=\"info-button\" onClick={() => this.pluginInfo(nameResults)} />\n                                    {this.DOMParserInfoBox(nameResults, reportsUsage, \"Reports usage\")}\n                                </li>\n                                <li id=\"column\">Name</li>\n                                <li id=\"column\">Description</li>\n                                <li id=\"column\">OS</li>\n                                <li id=\"column\">Type</li>\n                                <li id=\"column\">Date</li>\n                                <li id=\"column\" className=\"tags\">Tags</li>\n                            </ul>\n                        </div>\n                        <div id=\"results\">\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n        return items;\n    }\n\n    // Builds edit-box for each dump\n    buildEditBox (db_id, name, description, os, tags) {\n        if (name == null) {\n            name = \"\"\n        }\n        if (description == null) {\n            description = \"\"\n        }\n\n        const items = [];\n        items.push(\n            <div id=\"edit-box\" name={db_id} style={{display : \"none\"}} key={\"edit-box\" + db_id}> \n                <div id=\"edit-box-header\" key={\"edit-box-header\" + db_id}>\n                    <p>Update visible data and add tags</p>\n                    <img id=\"close-button\" src=\"images/close-red.png\" name={db_id} onClick={(evt) => this.displayCheckBox(evt, \"#edit-box\")}/>\n                </div>\n                <div id=\"data-edit-block\" key={\"edit-box-block\" + db_id + 1}>\n                    <p id=\"title\">Change name:</p>\n                    <input type=\"text\" id=\"edit-field\" className=\"name-edit-field\" name={db_id} placeholder={name}></input>\n                    <button id=\"edit-button\" onClick={(evt) => this.updateDumpData(evt, db_id, os, \"name\", $(\"[name='\" + db_id +  \"'].name-edit-field\").val())}> Change </button>\n                </div>\n                <div id=\"data-edit-block\" key={\"edit-box-block\" + db_id + 2}>\n                    <p id=\"title\">Change description:</p>\n                    <textarea type=\"text\" id=\"edit-field\" className=\"description-edit-field\" name={db_id} placeholder={description}></textarea>\n                    <button id=\"edit-button\" onClick={(evt) => this.updateDumpData(evt, db_id, os, \"description\", $(\"[name='\" + db_id +  \"'].description-edit-field\").val())}> Update </button>\n                </div>\n                <div id=\"data-edit-block\" key={\"edit-box-block\" + db_id + 3}>\n                    <p id=\"title\">Current tags:</p>\n                    <div id=\"current-tags\" key={\"currenttags\" + db_id}>\n                        {this.buildTags(db_id, os, tags)}\n                    </div>\n                </div>\n                <div id=\"data-edit-block\" key={\"edit-box-block\" + db_id + 4}>\n                    <p id=\"title\">Add tag:</p>\n                    <input type=\"text\" id=\"edit-field\" className=\"tag-edit-field\" name={db_id}></input>\n                    <ul id=\"tag-colors\">\n                        <li id=\"tag-color\" className=\"red\" alt=\"#F68B8B\" onClick={(evt) => this.chooseTagColor(evt)}></li>\n                        <li id=\"tag-color\" className=\"green\" alt=\"#CDFF8E\" onClick={(evt) => this.chooseTagColor(evt)}></li>\n                        <li id=\"tag-color\" className=\"blue\" alt=\"#62B3FD\" onClick={(evt) => this.chooseTagColor(evt)}></li>\n                        <li id=\"tag-color\" className=\"orange\" alt=\"#FFC188\" onClick={(evt) => this.chooseTagColor(evt)}></li>\n                        <li id=\"tag-color\" className=\"purple\" alt=\"#EE84FF\" onClick={(evt) => this.chooseTagColor(evt)}></li>\n                        <li id=\"tag-color\" className=\"yellow\" alt=\"#F9DC45\" onClick={(evt) => this.chooseTagColor(evt)}></li>\n                        <li id=\"tag-color\" className=\"turquoise\" alt=\"#A1FFE9\" onClick={(evt) => this.chooseTagColor(evt)}></li>\n                    </ul>\n                    <button id=\"edit-button\" className=\"color-add\" onClick={(evt) => this.addTag(evt, db_id, os, \"tags\", tags, $(\"[name='\" + db_id +  \"'].tag-edit-field\").val())}> Add </button>\n                </div>\n            </div>\n        )\n        return items;\n    }\n\n    // Changes picked tag color border to red and updates tagColor-state\n    chooseTagColor (evt) {\n        var color = evt.target.attributes.alt.value; // color is taken from selected #tag-color alt-attribute\n        var cls = evt.target.className;\n        $(\"[id=tag-color]\").css(\"border\", \"1px black solid\") // All #tag-color elements are given black borders\n        $(\"#tag-color.\" + cls).css(\"border\", \"2px red solid\") // Selected color is given red border for clarity\n        this.tagColorState(color) // tagColor-state is updated with the new color\n    }\n\n    // Newly created tag is appended to existing tags and send to database\n    addTag (evt, db_id, os, target, tags, newTag) {\n\n        // If no tags yet exist, object is created for them\n        if (tags == null) {\n            tags = {};\n        }\n        // Else stringified JSON is parsed to object containing current tags\n        else {\n            tags = JSON.parse(tags)\n        }\n        // New tag is added and object containing all tags is send to database\n        tags[newTag] = this.state.tagColor;\n        this.updateDumpData(evt, db_id, os, target, JSON.stringify(tags))\n        // Get os dump reports again so DOM will be updated with the new tag\n        if (os === \"linux\") {\n            var linuxData = this.getReports(\"linux\");\n            this.setState({basicLinuxData: linuxData}, function() {\n                $(\"[id=tag-color]\").css(\"border\", \"1px black solid\")\n                $(\"#tag-color.red\").css(\"border\", \"2px red solid\")\n                this.setState({tagColor: \"#F68B8B\"}) // tagColor-state is set back to default color\n            });\n        }\n        else if (os === \"windows\") {\n            var windowsData = this.getReports(\"windows\");\n            this.setState({basicWindowsData: windowsData}, function() {\n                $(\"[id=tag-color]\").css(\"border\", \"1px black solid\")\n                $(\"#tag-color.red\").css(\"border\", \"2px red solid\")\n                this.setState({tagColor: \"#F68B8B\"}) // tagColor-state is set back to default color\n            });\n        }\n    }\n\n    // Selected tag is removed by deleting it from database\n    removeTag (evt, tags, db_id, os, target) {\n        var tag = evt.target.attributes.name.value; // #remove-tag element attribute contains the tag key to delete\n        // Tag is removed and object containing remaining tags is send to database\n        delete tags[tag]\n        this.updateDumpData(evt, db_id, os, target, JSON.stringify(tags))\n        // Get os dump reports again so the tag will be removed from DOM\n        if (os === \"linux\") {\n            var linuxData = this.getReports(\"linux\");\n            this.setState({basicLinuxData: linuxData});\n        }\n        else if (os === \"windows\") {\n            var windowsData = this.getReports(\"windows\");\n            this.setState({basicWindowsData: windowsData});\n        }\n    }\n    // Builds current tags for dump\n    buildTags (db_id, os, tags) {\n        // If no tags are found\n        if (tags == null) {\n            return \"\";\n        }\n        // tags-variable is stringified so it is parsed to object\n        const items = [];\n        tags = JSON.parse(tags)\n        for (var tag in tags) { // Each tag is pushed to array\n            items.push(\n                <div id=\"tag-block\" style={{\"background-color\": tags[tag]}} key={tag + db_id}>\n                    <div id=\"tag-text\" onClick={(evt) => this.tagToSearch(evt)} key={tag + db_id}>{tag}</div>\n                    <img id=\"remove-tag\" src=\"images/close-grey.png\" name={tag} onClick={(evt) => this.removeTag(evt, tags, db_id, os, \"tags\")} key={tag + db_id}/>\n                </div>\n            )\n        }\n        return items;\n    }\n\n    // When user clicks tag, update search value with the tag value\n    tagToSearch (evt) {\n        let tagValue = evt.target.innerHTML;\n        $(\".search-field\").val(tagValue)\n    }\n\n    // Updates document value in selected MongoDB table\n    updateDumpData (evt, db_id, os, target, value) {\n    \n        // Data is sent inside FormData-object\n        var data = new FormData();\n        data.set('db_id', String(db_id)); // Dump document DB ID\n        data.set('os', String(os)); // Dump OS so right table will be picked in backend (linux_pluginresults or windows_pluginresults) \n        data.set('data', String(value)); // Data to update the specified table column\n\n        $.ajax({ // Send update request to API\n            contentType: false,\n            processData: false,\n            cache: false,\n            enctype: 'multipart/form-data',\n            url: \"http://autovola.com:8080/api/v1/update/\" + String(target) + \"/\", // target-variable is the column to be updated\n            type: \"POST\",\n            data: data,\n            async: false,\n            complete: function(json, textStatus, jqXHR){ // Update basic data state\n                if (os === \"linux\") {\n                    var linuxData = this.getReports(\"linux\");\n                    this.setState({basicLinuxData: linuxData});\n                }\n                else if (os === \"windows\") {\n                    var windowsData = this.getReports(\"windows\");\n                    this.setState({basicWindowsData: windowsData});\n                }\n            }.bind(this)\n        });\n    }\n\n    // Builds delete box and returns it\n    buildDeleteBox(os, db_id) {\n        const items = [];\n\n        items.push(\n            <div id=\"delete-dump-box\" name={db_id} style={{display : \"none\"}} key={\"delbox\" + db_id}>\n                <div id=\"delete-dump-box-header\" key={\"delboxheader\" + db_id}>\n                    <p key={\"deldump\" + db_id}>Delete dump</p>\n                    <img key={\"closedelete\" + db_id} id=\"close-button\" src=\"images/close-red.png\" name={db_id} onClick={(evt) => this.displayCheckBox(evt, \"#delete-dump-box\")}/>\n                </div>\n                <p key={\"deletecheck\" + db_id}>Are you sure?</p>\n                <button key={\"deletepermanent\" + db_id} id=\"delete-button\" onClick={() => this.deleteDumpData(os, db_id)}> Delete </button>\n            </div>\n        )\n        return items;\n    }\n\n    // Send request to API, so specified dump and its DB document will be removed\n    deleteDumpData (os, db_id) {\n\n        var data = new FormData();\n        data.set('db_id', String(db_id)); // Dump document DB ID\n        data.set('os', String(os)); // Dump OS so right table (linux_pluginresults or windows_pluginresults) and directory (symbols/linux/ or symbols/windows/) will be picked in backend \n\n        $.ajax({ // Send remove request to API\n            contentType: false,\n            processData: false,\n            url: \"http://autovola.com:8080/api/v1/delete/dump/\",\n            type: \"POST\",\n            data: data,\n            dataType: \"json\",\n            async: false,\n            complete: function(json, textStatus, jqXHR){\n                data = json.responseJSON\n                if (data === \"Fail\") {\n                    showInfoPopUp(\"Failed to remove file and/or DB results\", \"#FF4D4D\", true)\n                }\n            }\n        });\n\n        // Get reports again, so removed dump will not be shown anymore in the dump list\n        if (os === \"linux\") {\n            var linuxData = this.getReports(\"linux\");\n            this.setState({basicLinuxData: linuxData});\n        }\n        else if (os === \"windows\") {\n            var windowsData = this.getReports(\"windows\");\n            this.setState({basicWindowsData: windowsData});\n        }\n    }\n\n    // Used to get basic dump data from DB or all plugins data from one report (id-variable)\n    // If no id is given, all chosen os data (\"linux\" or \"windows\") is retrieved from DB\n    getReports(os, id = null) {\n        var data = null;\n\n        $.ajax({ \n            url: \"http://autovola.com:8080/api/v1/results/\"+ os + \"/\",\n            type: \"GET\",\n            data: {\n                id: id\n            },\n            dataType: \"json\",\n            contentType: 'application/javascript',\n            async: false,\n            complete: function(json, textStatus, jqXHR){\n                data = json.responseJSON\n                if (data === \"Fail\") {\n                    showInfoPopUp(\"Failed to get results\", \"#FF4D4D\", true)\n                }\n            }\n        });\n        return data;\n    }\n\n    // Starts to analyse selected dump by setting analysemode to true, getting all dump data from DB and rendering OS specific component\n    showDumpDetails(evt, os) {\n\n    }\n\n    // Shows box if it is hidden and hides it, if it is shown\n    displayCheckBox (evt, elementName, os = null) {\n        \n        var db_id = evt.target.attributes.name.value // Database ID is found from element name-attribute\n        var element = $(elementName + \"[name='\" + db_id +  \"']\") // #edit-box corresponding to DB ID is saved\n\n        if (element.css(\"display\") === \"none\") { // If box is opened\n            element.show();\n            if (elementName === \"#plugin-select-box\") { // If plugin select box is opened\n                this.getPluginRunStatus(os, db_id)\n            }\n        }\n        else if (element.css(\"display\") === \"block\") { // If box is closed\n            element.hide();\n        }\n    }\n\n    // Display status about plugin results in DB as image next to plugin name\n    async getPluginRunStatus (os, db_id) {\n        $(\"#plugin[name='\" + db_id +\"'] #plugin-run-status\").attr(\"src\", \"images/plugin-loading.gif\") // Set loading gif\n        let reports = this.getReports(os, db_id)\n        var pluginNames;\n        if (os === \"linux\") {\n            pluginNames = linuxPlugins;\n        }\n        else if (os === \"windows\") {\n            pluginNames = windowsPlugins;\n        }\n        \n        for (var plugin in pluginNames) { // Loop through plugin names\n            if (plugin in reports) { // If plugin results are found from dump's data\n                let pluginStatusImg = $(\"#plugin[name='\" + db_id +\"'] #plugin-run-status[name='\" + plugin + \"']\")\n                if (reports[plugin] === \"ERROR\" || reports[plugin] === \"\") { // Error has occurred when running plugin\n                    pluginStatusImg.attr(\"src\", \"images/plugin-error.png\")\n                }\n                else if (reports[plugin] === \"UNSATISFIED\") { // Unsatisfied requirements for plugin to run\n                    pluginStatusImg.attr(\"src\", \"images/plugin-unsatisfied.png\")\n                }\n                else if (Array.isArray(reports[plugin])) {\n                    if (reports[plugin].length > 0) { // Plugin has run correctly and returned results\n                        pluginStatusImg.attr(\"src\", \"images/plugin-ok.png\")\n                    }\n                    else if (reports[plugin].length === 0) { // Plugin has most likely run correctly, but no results to display\n                        pluginStatusImg.attr(\"src\", \"images/plugin-empty.png\")\n                    }\n                }\n            }\n            else { // Plugin results not found from DB\n                $(\"#plugin[name='\" + db_id +\"'] #plugin-run-status[name='\" + plugin + \"']\").attr(\"src\", \"images/plugin-not-found.png\")\n            }\n        }\n    }\n\n    // Builds plugin select box and returns it\n    buildPluginSelectBox(os, db_id) {\n        const items = [];\n        const plugins = [];\n        var pluginsToUse;\n        if (os === \"linux\") { // Get Linux plugins\n            pluginsToUse = linuxPlugins;\n        } \n        else if (os === \"windows\") { // Get Windows plugins\n            pluginsToUse = windowsPlugins;\n        }\n\n        const pluginCheckBoxes = [];\n        for (let i = 0; Object.keys(pluginsToUse).length > i; i+=3) { // Create table for plugins in plugin select box\n            pluginCheckBoxes.push(\n                <tbody key={\"tbody\" + \"plugincheckboxes\" + db_id + i}>\n                    <tr key={\"tr\" + \"plugincheckboxes\" + db_id + i}>\n                        {Object.keys(pluginsToUse).slice(i, i+3).map(plugin => {\n                            return (<td id=\"plugin\" key={\"plugin\" + db_id + i + plugin} name={db_id}>\n                                        <input type=\"checkbox\" name={db_id} value={plugin} key={\"checkbox\" + db_id + i + plugin}/>\n                                        <label htmlFor={db_id} key={\"checkbox_label\" + db_id + i + plugin}>{plugin}</label>\n                                        <img id=\"plugin-run-status\" key={\"plugin-run-status\" + db_id + i + plugin} name={plugin} key={i}/>\n                                    </td>)\n                        })}\n                    </tr>\n                </tbody>\n            )\n        }\n\n        // Both Windows and Linux have basicdetails plugin and select all -checkbox, so we can display them in each OS plugin select box \n        plugins.push(\n            <div id=\"plugins\" name={db_id} key={\"plugin-select\" + db_id}>\n                <table key={\"table\" + db_id}>\n                    <tbody key={\"tbody1\" + db_id}>\n                        <tr key={\"tr1\" + db_id}>\n                            <td id=\"plugin\" key={\"td1\" + \"select-all\" + db_id}>\n                                <input key={\"input\" + \"select-all\" + db_id} type=\"checkbox\" name={db_id} value=\"select all\" onClick={() => this.selectAllPlugins(db_id)}/>\n                                <label key={\"label\" + \"select-all\" + db_id} htmlFor={db_id}>Select all</label>\n                            </td>\n                        </tr>\n                    </tbody>\n                    <tbody key={\"tbody2\" + db_id}>\n                        <tr key={\"tr2\" + db_id}>\n                            <td id=\"plugin\" key={\"td2\" + \"select-all\" + db_id}>\n                                <input key={\"input\" + \"basicdetails\" + db_id} type=\"checkbox\" name={db_id} value=\"basicdetails\" />\n                                <label key={\"label\" + \"basicdetails\" + db_id} htmlFor={db_id}>basicdetails</label>\n                                <img key={\"img\" + \"basicdetails\" + db_id} id=\"plugin-run-status\" name=\"basicdetails\" />\n                            </td>\n                        </tr>\n                    </tbody>\n                    {pluginCheckBoxes}\n                </table>\n            </div>\n        )\n\n        // Create the actual box and put plugins inside it\n        items.push(\n            <div id=\"plugin-select-box\" name={db_id} style={{display : \"none\"}} key={\"pluginselectbox\" + db_id}>\n                <div id=\"select-plugins-box-header\" key={\"pluginselectboxheader\" + db_id}>\n                    <p key={\"pluginselection\" + db_id}>Plugin selection</p>\n                    <img key={\"icons-meaning\" + db_id} src=\"images/plugin-info-white.png\" name=\"icons-meaning\" id=\"info-button\" onClick={() => this.pluginInfo(\"icons-meaning\")} />\n                    {this.DOMParserInfoBox(\"icons-meaning\", pluginSelectImages)}\n                    <img key={\"closeplugselect\" + db_id} id=\"close-button\" src=\"images/close-red.png\" name={db_id} onClick={(evt) => this.displayCheckBox(evt, \"#plugin-select-box\", os)}/>\n                </div>\n                <h3 key={\"selectrun\" + db_id}>Select plugins to run</h3>\n                {plugins}\n                <button id=\"run-plugins-button\" name={db_id} onClick={() => this.runPlugins(os, db_id)}> Run plugins </button>\n            </div>\n        )\n        return items;\n    }\n\n    // Make all checkboxes selected or deselected in plugin select\n    selectAllPlugins(db_id) {\n        $(\"input[type=checkbox][name='\" + db_id +  \"']\").each(function() {\n            if(this.checked) {\n                // Iterate each checkbox\n                $(':checkbox').each(function() {\n                    this.checked = true;                        \n                });\n            } else {\n                $(':checkbox').each(function() {\n                    this.checked = false;                       \n                });\n            }\n        })\n    }\n\n    // Send user selected plugins and target dump DB ID to backend so they can be run\n    runPlugins (os, db_id) {\n        var pluginList = [];\n        // Gather plugins that are selected\n        pluginList = $(\"input[type=checkbox][name='\" + db_id +  \"']:checked\").map(function() {\n            return $(this).val();\n        }).get();\n        pluginList = pluginList.filter(e => e !== \"select all\") // Remove \"select all\"\n\n        // Data is sent inside FormData-object\n        var data = new FormData();\n        data.set('db_id', String(db_id)); // Dump document DB ID\n        data.set('os', String(os)); // Dump OS so right table will be picked in backend (linux_pluginresults or windows_pluginresults)\n        data.set('plugins', pluginList);\n\n        $.ajax({ // Send plugin run request to API\n            contentType: false,\n            processData: false,\n            cache: false,\n            enctype: 'multipart/form-data',\n            url: \"http://autovola.com:8080/api/v1/run/plugins/\",\n            type: \"POST\",\n            data: data,\n            async: false,\n            complete: function(json, textStatus, jqXHR){\n                var data = json.responseJSON\n                $(\"#plugin-select-box[name='\" + db_id +  \"']\").hide() // Hide plugin select box\n                $(\"input[type=checkbox][name='\" + db_id +  \"'][value='select all']\").prop('checked', false)\n                this.selectAllPlugins(db_id) // Make all plugins deselected\n                showInfoPopUp(\"Running plugins: \" + pluginList, \"#5DD55D\", true)\n            }.bind(this)\n        });\n    }\n\n    // Renders Linux reports inside #results element\n    buildLinuxReports() {\n\n        var osName = \"linux\";\n        var linuxData = this.reportSearch(this.state.basicLinuxData, this.state.search, osName); // Filter dumps that will be rendered to report list\n        const items = [];\n\n        if (linuxData == null) {\n            return;\n        }\n  \n        // loops through all linux dumps\n        for (let i = 0; i < Object.keys(linuxData).length; i++) {\n            // If linux header takes too much space its text is shrinked\n            try {\n                let os_length = linuxData[i].os_info.length\n                var os_styles = {}\n                if (os_length < 40)\n                    os_styles = {\"font-size\" : \"20px\"};\n                else if (os_length > 40 && os_length < 250)\n                    os_styles = {\"font-size\" : \"18px\"};\n            }     \n            catch (error) {}\n            // Builds the report block for specific dump\n            items.push(\n                <ul id=\"linux-data-container\" key={\"linux-data-container\" + linuxData[i]._id + i}>\n                    <li id=\"data-block\" className=\"button-block\" key={\"button-block\" + linuxData[i]._id + i}>\n                        <input className=\"analyze-button\"  type=\"image\" src=\"images/analyze.png\" alt=\"Analyze\" name={linuxData[i]._id} onClick={(evt) => this.StartAnalyzeMode(evt, \"linux\", true)}  key={\"analyze-button\" + linuxData[i]._id + i}/>\n                        <input className=\"plugin-display-button\" type=\"image\" src=\"images/select-plugins.png\" alt=\"plugins\" name={linuxData[i]._id} onClick={(evt) => this.displayCheckBox(evt, \"#plugin-select-box\", osName)} key={\"plugin-display-button\" + linuxData[i]._id + i}/>\n                        {this.buildPluginSelectBox(osName, linuxData[i]._id)}\n                        <input className=\"edit-dump-data-button\" type=\"image\" src=\"images/edit.png\" alt=\"edit-dump-data\" name={linuxData[i]._id} onClick={(evt) => this.displayCheckBox(evt, \"#edit-box\")} key={\"edit-dump-data-button\" + linuxData[i]._id + i}/>\n                        {this.buildEditBox(linuxData[i]._id, linuxData[i].name, linuxData[i].description, osName, linuxData[i].tags)}\n                        <input className=\"delete-dump-check-button\" type=\"image\" src=\"images/delete.png\" alt=\"delete\" name={linuxData[i]._id} onClick={(evt) => this.displayCheckBox(evt, \"#delete-dump-box\")} key={\"delete-dump-check-button\" + linuxData[i]._id + i}/>\n                        {this.buildDeleteBox(osName, linuxData[i]._id)}\n                    </li>\n                    <li id=\"data-block\" key={1 + linuxData[i]._id + i}> {linuxData[i].name == null ? \"-\" : linuxData[i].name} </li>\n                    <li id=\"data-block\" key={2 + linuxData[i]._id + i}> {linuxData[i].description == null ? \"-\" : linuxData[i].description} </li>\n                    <li id=\"data-block\" key={3 + linuxData[i]._id + i}  style={os_styles}>{linuxData[i].os_info == null ? \"-\" : linuxData[i].os_info}</li>\n                    <li id=\"data-block\" key={4 + linuxData[i]._id + i}>-</li>\n                    <li id=\"data-block\" key={5 + linuxData[i]._id + i}>{linuxData[i].currenttime == null ? \"-\" : linuxData[i].currenttime}</li>\n                    <li id=\"data-block\" key={6 + linuxData[i]._id + i} className=\"tags-block\"> {this.buildTags(linuxData[i]._id, osName ,linuxData[i].tags)}</li>\n                </ul>\n            )\n        }\n        return items;\n    }\n\n    // Renders Windows reports inside #results element\n    buildWindowsReports() {\n\n        var osName = \"windows\"\n        var windowsData = this.reportSearch(this.state.basicWindowsData, this.state.search, osName); // Filter dumps that will be rendered to report list\n        const items = [];\n        // loops through all Windows dumps\n        if (windowsData == null) {\n            return;\n        }\n\n        for (let i = 0; i < Object.keys(windowsData).length; i++) {\n            // Checks if os version details found from dump\n            var osData = \"\"\n            try {\n                osData = windowsData[i].os_info.ProductType + \" \" + windowsData[i].os_info[\"NtMajorVersion\"] + \".\" + windowsData[i].os_info[\"NtMinorVersion\"]\n            }\n            catch (err) {\n                osData = \"-\"\n            }\n            // Checks if operating system found from dump\n            var os = \"\"\n            try {\n                os = windowsData[i].os_info.os\n            }\n            catch (err) {\n                os = \"-\"\n            }\n            // Builds the report block for specific dump\n            items.push(\n                <ul id=\"windows-data-container\" key={\"windows-data-container\" + windowsData[i]._id + i}>\n                    <li id=\"data-block\" className=\"button-block\" key={\"button-block\" + windowsData[i]._id + i}>\n                        <input className=\"analyze-button\" type=\"image\" src=\"images/analyze.png\" alt=\"Analyze\" name={windowsData[i]._id} onClick={(evt) => this.StartAnalyzeMode(evt, \"windows\", true)} key={\"analyze-button\" + windowsData[i]._id + i}/>\n                        <input className=\"plugin-display-button\" type=\"image\" src=\"images/select-plugins.png\" alt=\"plugins\" name={windowsData[i]._id} onClick={(evt) => this.displayCheckBox(evt, \"#plugin-select-box\", osName)} key={\"plugin-display-button\" + windowsData[i]._id + i}/>\n                        {this.buildPluginSelectBox(osName, windowsData[i]._id)}\n                        <input className=\"edit-dump-data-button\" type=\"image\" src=\"images/edit.png\" alt=\"edit-dump-data\" name={windowsData[i]._id} onClick={(evt) => this.displayCheckBox(evt, \"#edit-box\")} key={\"edit-dump-data-button\" + windowsData[i]._id + i}/>\n                        {this.buildEditBox(windowsData[i]._id, windowsData[i].name, windowsData[i].description, osName, windowsData[i].tags)}\n                        <input className=\"delete-dump-check-button\" type=\"image\" src=\"images/delete.png\" alt=\"delete\" name={windowsData[i]._id} onClick={(evt) => this.displayCheckBox(evt, \"#delete-dump-box\")} key={\"delete-dump-check-button\" + windowsData[i]._id + i}/>\n                        {this.buildDeleteBox(osName, windowsData[i]._id)}\n                    </li>\n                    <li id=\"data-block\" key={1 + windowsData[i]._id + i}>{typeof windowsData[i].name === \"undefined\" ? \"-\" : windowsData[i].name}</li>\n                    <li id=\"data-block\" key={2 + windowsData[i]._id + i}> {windowsData[i].description == null ? \"-\" : windowsData[i].description} </li>\n                    <li id=\"data-block\" key={3 + windowsData[i]._id + i}>{os}</li>\n                    <li id=\"data-block\" key={4 + windowsData[i]._id + i}>{osData}</li>\n                    <li id=\"data-block\" key={5 + windowsData[i]._id + i}>{windowsData[i].currenttime}</li>\n                    <li id=\"data-block\" key={6 + windowsData[i]._id + i} name={windowsData[i]._id} className=\"tags-block\">{this.buildTags(windowsData[i]._id, osName, windowsData[i].tags)}</li>\n                </ul>\n            )\n        }\n        return items;\n    }\n\n    // Function is sent as prop to child components LinuxDetails and WindowsDetails\n    // It is called from child component to return from dump analyzing mode\n    returnFromAnalysis () {\n        this.setState({analysedDumpOS: null, analysedDump: null, analyzeMode: false});\n        //ReactDOM.render(this.buildResultsColumns(), document.getElementById('page'));\n    }\n\n    render() {\n\n        if (this.state.analyzeMode === false) {\n            return (\n                <div id=\"page\">\n                    {this.buildResultsColumns()}\n                </div>\n            );\n        }\n        if (this.state.analyzeMode === true) { // If analyseMode is set to true, render LinuxDetails or WindowsDetails\n            if (this.state.analysedDumpOS === \"linux\") {\n                return (\n                    <div id=\"page\">\n                        <LinuxDetails dumpData={this.state.analysedDump} returnFromAnalysis={this.returnFromAnalysis} showPopUp={this.showPopUp} buildInfoPopUp={this.buildInfoPopUp} />\n                    </div>\n                )\n            } else if (this.state.analysedDumpOS === \"windows\") {\n                return (\n                    <div id=\"page\">\n                        <WindowsDetails dumpData={this.state.analysedDump} returnFromAnalysis={this.returnFromAnalysis} showPopUp={this.showPopUp} buildInfoPopUp={this.buildInfoPopUp} />\n                    </div>\n                )\n            }\n        }\n    }\n}\n\nexport default Reports;","import './App.css';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport Menu from \"../menu/Menu\";\nimport Dump from \"../dump/Dump\";\nimport Symbols from \"../symbols/Symbols\";\nimport Reports from \"../reports/Reports\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Menu />\n        <Switch>\n          <Route exact path=\"/\">\n                <Redirect to=\"/reports\"/>\n          </Route>\n          <Route key={\"Reports\"} path=\"/reports\" exact component={() => <Reports />} />\n          <Route key={\"Dump\"} path=\"/dump\" exact component={() => <Dump />} />\n          <Route key={\"Symbols\"} path=\"/symbols\" exact component={() => <Symbols />} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}